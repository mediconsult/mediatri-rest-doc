{
  "swagger": "2.0",
  "info" : {
    "description" : "<h1>Mediatri REST<\/h1><p>This is Mediatri REST spesification 2016.05. This is work-in-progress documentation that Mediconsult also uses internally.<\/p>",
    "version" : "1.0.0-SNAPSHOT",
    "title" : "Mediatri REST"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "AdminResource",
      "description" : "REST API for various admin tasks like clearing cache onfly."
    }
    ,
    {
      "name" : "AuthenticationResource",
      "description" : "Service for authentication"
    }
    ,
    {
      "name" : "ClientLogResource",
      "description" : "Service for client logs"
    }
    ,
    {
      "name" : "ExtKurssiResource",
      "description" : "Rest service for ExtKurssiService for getting kurssi-information for patients"
    }
    ,
    {
      "name" : "FysiologisetMittauksetResource",
      "description" : "REST API for measurements (Fysiologiset mittaukset)"
    }
    ,
    {
      "name" : "HoitoResource",
      "description" : "REST API for Hoito (Hoito-ohjeet ja m��r�ykset)"
    }
    ,
    {
      "name" : "HoitotyoResource",
      "description" : "API for hoitotyonmerkinnat"
    }
    ,
    {
      "name" : "LaakitysHistoriaResource",
      "description" : "REST API for medication"
    }
    ,
    {
      "name" : "LaakitysResource",
      "description" : "REST API for Laakitys component"
    }
    ,
    {
      "name" : "MedicalRecordsResource",
      "description" : "REST API for kertomukset"
    }
    ,
    {
      "name" : "MetadataResource",
      "description" : "REST API for metadata"
    }
    ,
    {
      "name" : "OsastokarttaResource",
      "description" : "REST API for osastokartta.\n\nThere is only one osastokartta-configuration in Mediatri for logged in user and thus this resource has only one GET accesspoint without any parameters.\nOsastokartta contains list of osastolistat which are separate maps in different osasto."
    }
    ,
    {
      "name" : "PalvelupaatosResource",
      "description" : "REST API for palvelupaatokses."
    }
    ,
    {
      "name" : "PalvelutapahtumaResource",
      "description" : "REST API for patients"
    }
    ,
    {
      "name" : "PatientResource",
      "description" : "REST API for patients"
    }
    ,
    {
      "name" : "PingResource",
      "description" : "Simple server ping resource that mobile applications can use for heartbeat. Mobile applications can enable \"offline mode\" when connection to this resource is lost.\nGET\n/ping returns String \"OK\""
    }
    ,
    {
      "name" : "RiskitietoResource",
      "description" : "REST API for riskitiedot"
    }
    ,
    {
      "name" : "SeurantaResource",
      "description" : "REST API for seuranta"
    }
    ,
    {
      "name" : "TitleResource",
      "description" : "REST API for title resource. Supported operations:\nGET\ntitles/{title name}/config returns configuration for the titles\ntitles/{title name}/options returns list of available values for the title"
    }
    ,
    {
      "name" : "TutkimuspyyntoResource",
      "description" : "REST API for laboratory examinations"
    }
    ,
    {
      "name" : "UnitResource",
      "description" : "REST API for users"
    }
    ,
    {
      "name" : "UserResource",
      "description" : "REST API for users"
    }
  ],
  "definitions" : {
    "json_ACLPerm" : {
      "type" : "string",
      "title" : "ACLPerm",
          "enum" : [
            "VIEW",
            "ADD",
            "CHANGE",
            "REMOVE"
          ],
      "description" : ""
    }
    ,
    "json_AbstractDTO" : {
      "type" : "object",
      "title" : "AbstractDTO",
      "description" : ""
    }
    ,
    "json_AvailabilityDto" : {
      "type" : "object",
      "title" : "AvailabilityDto",
          "properties" : {
            "start" : {
"description" : "Required start time in Unix time",
"type" : "number"
            },
            "end" : {
"description" : "Required end time in Unix time",
"type" : "number"
            },
            "available" : {
"description" : "Is the worker available to work in required time?",
"type" : "boolean"
            },
            "workingHoursPlanned" : {
"description" : "Does the worker have working hours planned in required time?",
"type" : "boolean"
            },
            "conflicts" : {
"description" : "Does the worker have conflicting events planned at required time?",
"type" : "boolean"
            },
            "workingHourEvents" : {
"description" : "Get the working hour event(s) that cover the required time.\nIf working time is not (fully) planned for the required time period, returns\nworking hour events partially overlapping the period, or closest to the period\nif any exist during a 12 hour interval before of after the required time.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CalendarEventDto"
}
            },
            "conflictingEvents" : {
"description" : "Get any events that conflict with the required time.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CalendarEventDto"
}
            }
          },
      "description" : "Data transfer object for workers' availability information."
    }
    ,
    "json_BaseModel" : {
      "type" : "object",
      "title" : "BaseModel",
          "properties" : {
            "editTime" : {
"description" : "",
"type" : "number"
            },
            "ownerId" : {
"description" : "",
"type" : "number"
            },
            "componentId" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : ""
    }
    ,
    "json_BaseTitleValue" : {
      "type" : "object",
      "title" : "BaseTitleValue",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "vakio" : {
"description" : "",
"type" : "string"
            },
            "editModel" : {
"description" : "",
"type" : "boolean"
            },
            "type" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "vapaa" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_BasicInfo" : {
      "type" : "object",
      "title" : "BasicInfo",
          "properties" : {
            "dataLoaded" : {
"description" : "",
"type" : "boolean"
            },
            "href" : {
"description" : "Gets lazy loading URL for missing basic info.",
"type" : "string"
            },
            "titles" : {
"description" : "Gets basic info titles.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ViewTitleValue"
}
            }
          },
      "description" : "DTO for BasicInfo (Perustieto).\nBound to ViewTitleValue class."
    }
    ,
    "json_BasicInfoCategory" : {
      "type" : "string",
      "title" : "BasicInfoCategory",
          "enum" : [
            "YKSIKKO",
            "TYONTEKIJA",
            "ASIAKAS"
          ],
      "description" : ""
    }
    ,
    "json_CalendarContextDto" : {
      "type" : "object",
      "title" : "CalendarContextDto",
          "properties" : {
            "unit" : {
"description" : "Get the unit 'yksikk�'",
"type" : "number"
            },
            "form" : {
"description" : "Get the form 'lomake'",
"type" : "number"
            }
          },
      "description" : "Data transfer object for calendar context related fields, utilized to control the visibility of events and courses."
    }
    ,
    "json_CalendarDomainRightsAndSettings" : {
      "type" : "object",
      "title" : "CalendarDomainRightsAndSettings",
          "properties" : {
            "name" : {
"description" : "Get the name of the calendarForm.",
"type" : "string"
            },
            "setupForm" : {
"description" : "Get information about the Mediatri form and current user rights for viewing and modifying\nsetupForm data: reporting groups, event models, rooms, room groups and equipment.",
"$ref" : "#/definitions/json_FormRights"
            },
            "patientList" : {
"description" : "Get information about the Mediatri form and current user rights for the patient list.",
"$ref" : "#/definitions/json_FormRights"
            },
            "workerLists" : {
"description" : "Get the list of Mediatri forms and current user rights for the worker lists.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FormRights"
}
            },
            "calendarForm" : {
"description" : "Get Mediatri form information and current user rights for the calendar, i.e. viewing and modifying\nevents.",
"$ref" : "#/definitions/json_FormRights"
            },
            "coursesForm" : {
"description" : "Get Mediatri form information and current user rights for courses, i.e. viewing and modifying\ncourses, course periods and course related settings (tags, named groups, roles).",
"$ref" : "#/definitions/json_FormRights"
            },
            "workerSettingsForm" : {
"description" : "Get Mediatri form information and current user rights for worker related information, i.e. viewing and modifying\nworker skills and working hours.",
"$ref" : "#/definitions/json_FormRights"
            },
            "optimization" : {
"description" : "Get Mediatri form information and current user rights and settings for optimization.",
"$ref" : "#/definitions/json_OptimizationRightsAndSettings"
            }
          },
      "description" : "Data transfer object for calendarForm domain rights and settings."
    }
    ,
    "json_CalendarEventContentGroupDto" : {
      "type" : "object",
      "title" : "CalendarEventContentGroupDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "items" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CalendarEventContentGroupItemDto"
}
            }
          }
        }
      ],
      "description" : "Data transfer object class for user defined content groups in calendar events."
    }
    ,
    "json_CalendarEventContentGroupItemDto" : {
      "type" : "object",
      "title" : "CalendarEventContentGroupItemDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "title" : {
"description" : "",
"$ref" : "#/definitions/json_BaseTitleValue"
            },
            "meaning" : {
"description" : "",
"type" : "number"
            },
            "ordering" : {
"description" : "",
"type" : "number"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_CalendarEventDto" : {
      "type" : "object",
      "title" : "CalendarEventDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "restricted" : {
"description" : "",
"type" : "boolean"
            },
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "status" : {
"description" : "",
"$ref" : "#/definitions/json_EventStatus"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "durationInMinutes" : {
"description" : "",
"type" : "number"
            },
            "serviceClass" : {
"description" : "",
"type" : "string"
            },
            "event" : {
"description" : "",
"$ref" : "#/definitions/json_EventDto"
            },
            "workers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventWorkerDto"
}
            },
            "customers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventCustomerDto"
}
            },
            "rooms" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventResourceDto"
}
            },
            "equipmentTypes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventResourceDto"
}
            },
            "coursePeriods" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventCoursePeriodDto"
}
            },
            "locked" : {
"description" : "",
"type" : "boolean"
            },
            "lock" : {
"description" : "",
"$ref" : "#/definitions/json_LockDto"
            },
            "contentGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CalendarEventContentGroupDto"
}
            },
            "actualStartTime" : {
"description" : "",
"type" : "number"
            },
            "actualEndTime" : {
"description" : "",
"type" : "number"
            },
            "missingResources" : {
"description" : "",
"$ref" : "#/definitions/json_EventMissingResourcesDto"
            }
          }
        }
      ],
      "description" : "Data transfer object for calendar events."
    }
    ,
    "json_ClientTitleConfig" : {
      "type" : "object",
      "title" : "ClientTitleConfig",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "number"
            },
            "pakollinen" : {
"description" : "",
"type" : "boolean"
            },
            "onlyFromList" : {
"description" : "",
"type" : "boolean"
            },
            "optionsUrl" : {
"description" : "",
"type" : "string"
            },
            "editable" : {
"description" : "",
"type" : "boolean"
            },
            "attribute" : {
"description" : "",
"type" : "number"
            },
            "optionValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ViewTitleValue"
}
            }
          },
      "description" : "Title class is used in edit and view models to represent a title for different components.\nAlso this class is used as title configuration in different component config\nlike KertomusComponentConfig or FysiologinenMittaus.\nThe class contains the value as the object of the class derived from  @BaseTitleValue.\nfi.mediconsult.core.internal.titles.presentations package contains the available value for the titles depending from title type."
    }
    ,
    "json_ContentGroupDto" : {
      "type" : "object",
      "title" : "ContentGroupDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "type" : {
"description" : "",
"$ref" : "#/definitions/json_ContentGroupType"
            },
            "visibility" : {
"description" : "",
"$ref" : "#/definitions/json_ContentGroupVisibility"
            },
            "order" : {
"description" : "",
"type" : "number"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "freeItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FreeContentGroupItem"
}
            }
          }
        }
      ],
      "description" : "Represents Content Groups in EventModelDto\n\nExample:\n\n<pre>\n<code>\n{\nid: 1,\nname: \"Perustiedot\",\ntype: \"SYSTEM_DEFINED\"\n}\n<\/code>\n<\/pre>"
    }
    ,
    "json_ContentGroupType" : {
      "type" : "string",
      "title" : "ContentGroupType",
          "enum" : [
            "USER_DEFINED",
            "SYSTEM_DEFINED_GENERAL",
            "SYSTEM_DEFINED_WORKERS",
            "SYSTEM_DEFINED_CUSTOMERS",
            "SYSTEM_DEFINED_EQUIPMENT",
            "SYSTEM_DEFINED_ROOM",
            "SYSTEM_DEFINED_BASIC_INFORMATION",
            "SYSTEM_DEFINED_SERVICE_CLASS"
          ],
      "description" : ""
    }
    ,
    "json_ContentGroupVisibility" : {
      "type" : "string",
      "title" : "ContentGroupVisibility",
          "enum" : [
            "VISIBLE",
            "COLLAPSED",
            "HIDDEN",
            "EXCLUDED"
          ],
      "description" : ""
    }
    ,
    "json_CoreAuthenticationDTO" : {
      "type" : "object",
      "title" : "CoreAuthenticationDTO",
          "properties" : {
            "username" : {
"description" : "Username in core. This in not unique ID. Usually maps to Omistaja.Tunnus but it's not guaranteed (with Medinet-customer login this can be anything!).",
"type" : "string"
            },
            "roles" : {
"description" : "Roles grouped by unit id. Key is the unitId and value is @see UserRoleInfo Maps to UserRoleInfo",
"type" : "object"
            },
            "units" : {
"description" : "Unit map with units long name as key",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Unit"
}
            },
            "activeRole" : {
"description" : "Returns roleId for current session. If roleId is null you must change role+unit using authentication-resource.",
"type" : "number"
            },
            "activeUnit" : {
"description" : "Returns unitId for current session. If unitId is null you must change role+unit using authentication-resource.",
"type" : "number"
            },
            "firstNames" : {
"description" : "Authenticated users first names. Can contain multiple names separated by spaces.",
"type" : "string"
            },
            "lastName" : {
"description" : "Last name of the authenticated user.",
"type" : "string"
            },
            "success" : {
"description" : "boolean true if authentication was successful. If false, errorMessage is provided in message-key.",
"type" : "boolean"
            },
            "message" : {
"description" : "Error message for authentication if authentication has failed",
"type" : "string"
            },
            "patient" : {
"description" : "true if authenticated user is patient-type.",
"type" : "boolean"
            },
            "userId" : {
"description" : "",
"type" : "number"
            },
            "developer" : {
"description" : "",
"type" : "boolean"
            }
          },
      "description" : "DTO object for authentication purposes. This DTO is returned when logging in with REST."
    }
    ,
    "json_CourseCollectionDto" : {
      "type" : "object",
      "title" : "CourseCollectionDto",
          "properties" : {
            "courses" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CourseDto"
}
            }
          },
      "description" : "Data transfer object representing list of courses and associated course data for each course"
    }
    ,
    "json_CourseCustomerDto" : {
      "type" : "object",
      "title" : "CourseCustomerDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "customerId" : {
"description" : "",
"type" : "number"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "canceled" : {
"description" : "Customer attendance to period is canceled",
"type" : "boolean"
            },
            "assignedCoach" : {
"description" : "",
"$ref" : "#/definitions/json_Employee"
            }
          }
        }
      ],
      "description" : "Dto representing a customer attending a course period."
    }
    ,
    "json_CourseDto" : {
      "type" : "object",
      "title" : "CourseDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "kelaID" : {
"description" : "",
"type" : "string"
            },
            "dayPrice" : {
"description" : "",
"type" : "number"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "startTime" : {
"description" : "Start time is the day of start time of the first period in course (Unix time stamp in Long)",
"type" : "number"
            },
            "endTime" : {
"description" : "End time is the end time of last period in course. (Unix time stamp in Long)",
"type" : "number"
            },
            "periods" : {
"description" : "List of course periods in course ordered by period start time",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CoursePeriodDto"
}
            },
            "namedGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CourseNamedGroupDto"
}
            },
            "tags" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TagsForCourseDto"
}
            },
            "calendarContext" : {
"description" : "",
"$ref" : "#/definitions/json_CalendarContextDto"
            }
          }
        }
      ],
      "description" : "Data transfer object for course data\n\nExamle of course JSON without any \"child\" dtos:\n<pre>\n {\n   \"courses\":[\n      {\n         \"created\":1444210792000,\n         \"id\":1,\n         \"name\":\"kela aslak\",\n         \"abbr\":\"ka\",\n         \"status\":\"DRAFT\",\n         \"periods\":[  ],\n         \"tags\":[\n            {  },\n            {  }\n         ]\n      }\n   ]\n}\n<\/pre>"
    }
    ,
    "json_CourseNamedGroupDto" : {
      "type" : "object",
      "title" : "CourseNamedGroupDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "members" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_NamedGroupMemberDto"
}
            },
            "newNameGroupId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_CoursePeriodDto" : {
      "type" : "object",
      "title" : "CoursePeriodDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "status" : {
"description" : "",
"type" : "string"
            },
            "minAttendees" : {
"description" : "",
"type" : "number"
            },
            "maxAttendees" : {
"description" : "",
"type" : "number"
            },
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "endTime" : {
"description" : "Period end date and time in Unix timestamp format",
"type" : "number"
            },
            "customers" : {
"description" : "Customers attending this course period",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CourseCustomerDto"
}
            },
            "periodTags" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TagsForPeriodDto"
}
            }
          }
        }
      ],
      "description" : "Data transfer object representing course period data.\nCan be used alone or part of CourseDto\n\nExample:\n\n<pre>\n \"periods\":[\n            {\n               \"created\":1444213751000,\n               \"modified\":1444214056000,\n               \"id\":1,\n               \"name\":\"aloitus jakso\",\n               \"abbr\":\"aj\",\n               \"startTime\":1444251599000,\n               \"endTime\":1444510799000,\n               \"minAttendees\":5,\n               \"maxAttendees\":10,\n               \"status\":\"DRAFT\",\n               \"customers\":[\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  }\n               ]\n            },\n            {\n               \"created\":1444213783000,\n               \"modified\":1444214056000,\n               \"id\":2,\n               \"name\":\"keskijakso\",\n               \"abbr\":\"kj\",\n               \"startTime\":1445288399000,\n               \"endTime\":1445633999000,\n               \"minAttendees\":7,\n               \"maxAttendees\":20,\n               \"status\":\"DRAFT\",\n               \"customers\":[\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  }\n               ]\n            },\n            {\n               \"created\":1444213814000,\n               \"modified\":1444214056000,\n               \"id\":3,\n               \"name\":\"loppu jakso\",\n               \"abbr\":\"lj\",\n               \"startTime\":1446501599000,\n               \"endTime\":1446847199000,\n               \"minAttendees\":5,\n               \"maxAttendees\":15,\n               \"status\":\"DRAFT\",\n               \"customers\":[\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  },\n                  {  }\n               ]\n            }\n         ],\n\n <\/pre>"
    }
    ,
    "json_Date" : {
      "type" : "object",
      "title" : "Date",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "json_EditTitleValue" : {
      "type" : "object",
      "title" : "EditTitleValue",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "$ref" : "#/definitions/json_BaseTitleValue"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "json_Employee" : {
      "type" : "object",
      "title" : "Employee",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "data" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            }
          },
      "description" : ""
    }
    ,
    "json_EquipmentRequirement" : {
      "type" : "string",
      "title" : "EquipmentRequirement",
          "enum" : [
            "FOR_EVERY_CUSTOMER",
            "FOR_EVERY_CUSTOMER_AND_WORKER",
            "FIXED_AMOUNT"
          ],
      "description" : ""
    }
    ,
    "json_EventCategory" : {
      "type" : "string",
      "title" : "EventCategory",
          "enum" : [
            "WORK",
            "TIME"
          ],
      "description" : ""
    }
    ,
    "json_EventCoursePeriodDto" : {
      "type" : "object",
      "title" : "EventCoursePeriodDto",
          "properties" : {
            "coursePeriodId" : {
"description" : "",
"type" : "number"
            },
            "coursePeriodName" : {
"description" : "",
"type" : "string"
            },
            "coursePeriodAbbreviation" : {
"description" : "",
"type" : "string"
            },
            "courseId" : {
"description" : "",
"type" : "number"
            },
            "courseName" : {
"description" : "",
"type" : "string"
            },
            "courseAbbreviation" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "Data transfer object for event course period information."
    }
    ,
    "json_EventCustomerDto" : {
      "type" : "object",
      "title" : "EventCustomerDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_EventParticipantDto"
        },
        {
          "properties" : {
            "amount" : {
"description" : "",
"type" : "number"
            },
            "coursePeriodId" : {
"description" : "",
"type" : "number"
            },
            "serviceDecision" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelupaatos"
            }
          }
        }
      ],
      "description" : "Data transfer object for event customer information."
    }
    ,
    "json_EventDto" : {
      "type" : "object",
      "title" : "EventDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "durationInMinutes" : {
"description" : "",
"type" : "number"
            },
            "recurrenceCode" : {
"description" : "",
"type" : "string"
            },
            "recurrenceEndDate" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "abbreviation" : {
"description" : "",
"type" : "string"
            },
            "character" : {
"description" : "",
"$ref" : "#/definitions/json_TapahtumaLuonne"
            },
            "eventModelId" : {
"description" : "",
"type" : "number"
            },
            "calendarContext" : {
"description" : "",
"$ref" : "#/definitions/json_CalendarContextDto"
            },
            "excludedDays" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "reportingGroup" : {
"description" : "",
"$ref" : "#/definitions/json_ReportingGroupDto"
            },
            "unitBasicInfoTitles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_BaseTitleValue"
}
            }
          }
        }
      ],
      "description" : "Data transfer object for events."
    }
    ,
    "json_EventMissingResourcesDto" : {
      "type" : "object",
      "title" : "EventMissingResourcesDto",
          "properties" : {
            "numOfMissingWorkers" : {
"description" : "",
"type" : "number"
            },
            "missingSkill" : {
"description" : "",
"type" : "number"
            },
            "numOfMissingEquipmentTypes" : {
"description" : "",
"type" : "number"
            },
            "missingEquipmentType" : {
"description" : "",
"type" : "number"
            },
            "numOfMissingEquipment" : {
"description" : "",
"type" : "number"
            },
            "numOfRequiredEquipment" : {
"description" : "",
"type" : "number"
            },
            "numOfMissingRoomGroups" : {
"description" : "",
"type" : "number"
            },
            "missingRoomGroup" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "Data transfer object for missing resource information."
    }
    ,
    "json_EventModelBasicInfo" : {
      "type" : "object",
      "title" : "EventModelBasicInfo",
          "properties" : {
            "title" : {
"description" : "",
"$ref" : "#/definitions/json_BaseTitleValue"
            },
            "displayOrder" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "Represents one Perustiedot otsikko, connected to Tapahtuman perustiedot"
    }
    ,
    "json_EventModelDto" : {
      "type" : "object",
      "title" : "EventModelDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "basicData" : {
"description" : "",
"type" : "object"
            },
            "reportingGroupId" : {
"description" : "",
"type" : "number"
            },
            "calendarModelFormId" : {
"description" : "",
"type" : "number"
            },
            "defaultUnit" : {
"description" : "",
"type" : "number"
            },
            "internalNote" : {
"description" : "",
"type" : "string"
            },
            "defaultDurationInMins" : {
"description" : "",
"type" : "number"
            },
            "startTimeLimit" : {
"description" : "",
"type" : "string"
            },
            "endTimeLimit" : {
"description" : "",
"type" : "string"
            },
            "requiredSkills" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "requiredRoomGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoomGroupDto"
}
            },
            "requiredEquipmentTypes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequiredEquipmentTypeDto"
}
            },
            "contentGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ContentGroupDto"
}
            },
            "minParticipants" : {
"description" : "",
"type" : "number"
            },
            "maxParticipants" : {
"description" : "",
"type" : "number"
            },
            "waitingRoom" : {
"description" : "",
"type" : "string"
            },
            "serviceClass" : {
"description" : "",
"type" : "string"
            },
            "serviceClassChangeable" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Data transfer object for event models."
    }
    ,
    "json_EventOverlapConflictDto" : {
      "type" : "object",
      "title" : "EventOverlapConflictDto",
          "properties" : {
            "conflictId" : {
"description" : "",
"type" : "number"
            },
            "calendarEventId" : {
"description" : "",
"type" : "number"
            },
            "eventName" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "Data transfer object for resource conflict information."
    }
    ,
    "json_EventParticipantDto" : {
      "type" : "object",
      "title" : "EventParticipantDto",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "unit" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "delay" : {
"description" : "",
"type" : "number"
            },
            "duration" : {
"description" : "",
"type" : "number"
            },
            "canceled" : {
"description" : "",
"type" : "boolean"
            },
            "cancellationReason" : {
"description" : "",
"type" : "string"
            },
            "conflicting" : {
"description" : "",
"type" : "boolean"
            },
            "overlapConflicts" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventOverlapConflictDto"
}
            },
            "basicInfoTitles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_BaseTitleValue"
}
            },
            "participantId" : {
"description" : "",
"type" : "number"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            }
          },
      "description" : "Data transfer object for event participant information (worker and customer base)."
    }
    ,
    "json_EventResourceDto" : {
      "type" : "object",
      "title" : "EventResourceDto",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "typeid" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "delay" : {
"description" : "",
"type" : "number"
            },
            "duration" : {
"description" : "",
"type" : "number"
            },
            "amount" : {
"description" : "",
"type" : "number"
            },
            "required" : {
"description" : "",
"type" : "boolean"
            }
          },
      "description" : "Data transfer object for event resource information."
    }
    ,
    "json_EventStatus" : {
      "type" : "string",
      "title" : "EventStatus",
          "enum" : [
            "DRAFT",
            "PLANNED",
            "CONFIRMED",
            "ONGOING",
            "DONE",
            "CANCELED",
            "CANCELED_BY_PARTICIPANT",
            "CANCELED_BY_PROVIDER",
            "NOT_REALIZED",
            "INTERRUPTED"
          ],
      "description" : ""
    }
    ,
    "json_EventWorkerDto" : {
      "type" : "object",
      "title" : "EventWorkerDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_EventParticipantDto"
        },
        {
          "properties" : {
            "skillid" : {
"description" : "",
"type" : "number"
            },
            "workingHoursConflict" : {
"description" : "",
"type" : "boolean"
            },
            "required" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Data transfer object for event worker information."
    }
    ,
    "json_ExtendFormInfo" : {
      "type" : "object",
      "title" : "ExtendFormInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FormInfo"
        },
        {
          "properties" : {
            "lomakeId" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "hoitosuhdevaatimus" : {
"description" : "",
"type" : "string"
            },
            "vastuuyksikko" : {
"description" : "",
"type" : "number"
            },
            "pohjavari" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO class to present information about lomake from Lomake table.\nThis class extends FormInfo.\nThis class is not designed to use in Json model and can be built only from ILomakeGetters class using build method"
    }
    ,
    "json_FormInfo" : {
      "type" : "object",
      "title" : "FormInfo",
          "properties" : {
            "fullFormTypeId" : {
"description" : "",
"type" : "number"
            },
            "formTypeInfo" : {
"description" : "",
"$ref" : "#/definitions/json_FormTypeInfo"
            },
            "ownerTypeInfo" : {
"description" : "",
"$ref" : "#/definitions/json_OwnerTypeInfo"
            },
            "formOwnerId" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "DTO for representing Mediatri form related information"
    }
    ,
    "json_FormRights" : {
      "type" : "object",
      "title" : "FormRights",
          "properties" : {
            "id" : {
"description" : "Get the id of the Mediatri form.",
"type" : "number"
            },
            "name" : {
"description" : "Get the name of the Mediatri form.",
"type" : "string"
            },
            "ownerId" : {
"description" : "Get the owner id of the Mediatri form.",
"type" : "number"
            },
            "rights" : {
"description" : "Return the rights that the current user has for the form.\nCombination of VIEW, ADD, CHANGE, REMOVE.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ACLPerm"
}
            }
          },
      "description" : "Data transfer object for Mediatri form rights information."
    }
    ,
    "json_FormTypeInfo" : {
      "type" : "object",
      "title" : "FormTypeInfo",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "number"
            },
            "description" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : ""
    }
    ,
    "json_FreeContentGroupItem" : {
      "type" : "object",
      "title" : "FreeContentGroupItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "title" : {
"description" : "",
"$ref" : "#/definitions/json_BaseTitleValue"
            },
            "meaningId" : {
"description" : "",
"type" : "number"
            },
            "meaningChangeable" : {
"description" : "",
"type" : "boolean"
            },
            "ordering" : {
"description" : "",
"type" : "number"
            },
            "mandatory" : {
"description" : "",
"type" : "boolean"
            },
            "changeable" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "DTO information for one vapaa sis�lt�ryhm�"
    }
    ,
    "json_FysiologinenMittaus" : {
      "type" : "object",
      "title" : "FysiologinenMittaus",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "number"
            },
            "mittausInfo" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MittausBase"
}
            }
          },
      "description" : ""
    }
    ,
    "json_FysiologisetMittauksetView" : {
      "type" : "object",
      "title" : "FysiologisetMittauksetView",
          "properties" : {
            "patientId" : {
"description" : "",
"type" : "number"
            },
            "fysiologinenMittausList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FysiologinenMittaus"
}
            }
          },
      "description" : "Basic DTO model for physiological measurements.\nThis class includes list of measurements objects which are the instances of FysiologinenMittaus.\nMittausComponentConfig class presents the configuration used in adding new measurements.\nThis configuration includes the list of kertomusteksti forms and main titles configured for every form."
    }
    ,
    "json_GenericOmistaja" : {
      "type" : "object",
      "title" : "GenericOmistaja",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "nameExtension" : {
"description" : "",
"type" : "string"
            },
            "editTime" : {
"description" : "",
"type" : "number"
            },
            "omistajaId" : {
"description" : "",
"type" : "number"
            },
            "omistajaListAvailability" : {
"description" : "",
"$ref" : "#/definitions/json_TimeInterval"
            }
          },
      "description" : "Unit, Patient and User inherits this. They all are Mediatri omistajas with same set of properties (but bit different API and business rules)\n\nGeneric omistaja DTO representative class that forms a concrete object instance that presents omistaja without binding directly to concrete\nleaf class (patient, unit etc.) in inheritance hierarchy.\n\nThis class also provides common code base for creating new skeletal omistaja leaf classes that do not yet have any business\nlogic at start (but business logic is added as development proceeds naturally).\n\nEach omistajatyyppi leaf-class should be sub-classed directly from this class.\n\n\nThis class can be also used as generic omistaja instance, in case no proper leaf class for the omistajatyyppi yet exists."
    }
    ,
    "json_Hoidot" : {
      "type" : "object",
      "title" : "Hoidot",
          "properties" : {
            "hoidot" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Hoito"
}
            },
            "permissions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionDTO"
}
            },
            "omistaja" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_Hoito" : {
      "type" : "object",
      "title" : "Hoito",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "alkaa" : {
"description" : "Returns the alkaa date",
"$ref" : "#/definitions/json_Date"
            },
            "loppuu" : {
"description" : "Returns the loppuu date",
"$ref" : "#/definitions/json_Date"
            },
            "maaraaja" : {
"description" : "Returns the maaraaja id",
"type" : "number"
            },
            "tekija" : {
"description" : "Returns the tekija id",
"type" : "number"
            },
            "otsikko" : {
"description" : "Returns the header (otsikko)",
"type" : "string"
            },
            "vakio" : {
"description" : "Returns the constant string (vakio)",
"type" : "string"
            },
            "vapaa" : {
"description" : "Returns the free string (vapaa)",
"type" : "string"
            },
            "huomautuksia" : {
"description" : "Returns the notifications (huomautuksia)",
"type" : "string"
            },
            "kellonajat" : {
"description" : "Returns the times as a string",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "Returns the recorder (kirjaaja)",
"type" : "number"
            },
            "lopettaja" : {
"description" : "Returns the ender (lopettaja)",
"type" : "number"
            },
            "lopetettu" : {
"description" : "Returns the time of ending (lopetettu)",
"type" : "number"
            },
            "kerta" : {
"description" : "Returns the type of Hoito (K = kertaluonteinen, E = pysyv�)",
"type" : "object"
            },
            "tehty" : {
"description" : "Returns the time when Hoito is done",
"type" : "number"
            },
            "lomake" : {
"description" : "Returns the used form (lomake)",
"type" : "number"
            },
            "rivi" : {
"description" : "Returns the row number (rivi)",
"type" : "number"
            },
            "muutosaika" : {
"description" : "Returns the time of change",
"type" : "number"
            },
            "maaraajaNimi" : {
"description" : "",
"type" : "string"
            },
            "kirjaajaNimi" : {
"description" : "",
"type" : "string"
            },
            "tekijaNimi" : {
"description" : "",
"type" : "string"
            },
            "lopettajaNimi" : {
"description" : "",
"type" : "string"
            },
            "lomakeNimi" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for Hoito\n\nA class to present HOITO table in hoito-ohjeet ja -m��r�ykset functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_Hoitojakso" : {
      "type" : "object",
      "title" : "Hoitojakso",
          "properties" : {
            "patientId" : {
"description" : "",
"type" : "number"
            },
            "osa" : {
"description" : "",
"type" : "number"
            },
            "alkoi" : {
"description" : "",
"type" : "number"
            },
            "loppui" : {
"description" : "",
"type" : "number"
            },
            "yksikko" : {
"description" : "",
"type" : "number"
            },
            "kustannuspaikka" : {
"description" : "",
"type" : "number"
            },
            "maksaja" : {
"description" : "",
"type" : "number"
            },
            "maksusopimus" : {
"description" : "",
"type" : "number"
            },
            "palveluala" : {
"description" : "",
"type" : "string"
            },
            "mistatuli" : {
"description" : "",
"type" : "string"
            },
            "jatkohoito" : {
"description" : "",
"type" : "string"
            },
            "ika" : {
"description" : "",
"type" : "number"
            },
            "eihoitoilmoitusta" : {
"description" : "",
"type" : "boolean"
            },
            "hoitojaksolinkki" : {
"description" : "",
"type" : "number"
            },
            "poistettu" : {
"description" : "",
"$ref" : "#/definitions/json_PoistettuStatus"
            },
            "muutosoikeus" : {
"description" : "",
"type" : "number"
            },
            "projekti" : {
"description" : "",
"type" : "number"
            },
            "puutteellinen" : {
"description" : "",
"$ref" : "#/definitions/json_PuutteellinenStatus"
            },
            "tiedot" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "editTime" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "Hoitojakso DTO"
    }
    ,
    "json_Hoitosuhde" : {
      "type" : "object",
      "title" : "Hoitosuhde",
          "properties" : {
            "date" : {
"description" : "",
"type" : "number"
            },
            "unit" : {
"description" : "",
"type" : "number"
            },
            "patient" : {
"description" : "",
"type" : "number"
            },
            "palvelutapahtuma" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "katselunErityinenSyy" : {
"description" : "",
"type" : "string"
            },
            "erityissuojausperustelu" : {
"description" : "",
"type" : "string"
            },
            "user" : {
"description" : "",
"type" : "number"
            },
            "sallitutErityissuojausryhmat" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "description" : "This DTO contains information about user&lt;-&gt;patient hoitosuhde"
    }
    ,
    "json_Hoitotyo" : {
      "type" : "object",
      "title" : "Hoitotyo",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "patientId" : {
"description" : "",
"type" : "number"
            },
            "locked" : {
"description" : "",
"type" : "boolean"
            },
            "lukitsija" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "vastuullinen" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "alkaa" : {
"description" : "",
"type" : "number"
            },
            "loppuu" : {
"description" : "",
"type" : "number"
            },
            "lastEntry" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "firstEntry" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "previousEntry" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "asetukset" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "nextEntry" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "merkinnat" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Hoitotyomerkinta"
}
            },
            "previousVersion" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "nextVersion" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "readTime" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "This DTO contains information about one hoitotyon merkint� record"
    }
    ,
    "json_Hoitotyoasetukset" : {
      "type" : "object",
      "title" : "Hoitotyoasetukset",
          "properties" : {
            "tarveluokitusKoodisto" : {
"description" : "",
"$ref" : "#/definitions/json_Koodisto"
            },
            "tulosluokitus" : {
"description" : "",
"$ref" : "#/definitions/json_Koodisto"
            },
            "otsikkoKoodisto" : {
"description" : "",
"$ref" : "#/definitions/json_Koodisto"
            },
            "toimintoluokitusKoodisto" : {
"description" : "",
"$ref" : "#/definitions/json_Koodisto"
            },
            "hoitoprosessinVaiheKoodisto" : {
"description" : "",
"$ref" : "#/definitions/json_Koodisto"
            }
          },
      "description" : ""
    }
    ,
    "json_Hoitotyomerkinta" : {
      "type" : "object",
      "title" : "Hoitotyomerkinta",
          "properties" : {
            "merkinta" : {
"description" : "",
"type" : "number"
            },
            "vaihe" : {
"description" : "",
"type" : "string"
            },
            "otsikkokoodi" : {
"description" : "",
"type" : "string"
            },
            "komponentti" : {
"description" : "",
"type" : "string"
            },
            "luokka" : {
"description" : "",
"type" : "string"
            },
            "jarjestys" : {
"description" : "",
"type" : "number"
            },
            "teksti" : {
"description" : "",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "kirjausaika" : {
"description" : "",
"type" : "number"
            },
            "varmuus" : {
"description" : "",
"type" : "string"
            },
            "tilanne" : {
"description" : "",
"type" : "string"
            },
            "pysyvyys" : {
"description" : "",
"type" : "string"
            },
            "readTime" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "This DTO contains information about one hoitotyon merkint� record"
    }
    ,
    "json_IdNamePair" : {
      "type" : "object",
      "title" : "IdNamePair",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_KertomuksetView" : {
      "type" : "object",
      "title" : "KertomuksetView",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_BaseModel"
        },
        {
          "properties" : {
            "entries" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_KertomusEntryView"
}
            },
            "updated" : {
"description" : "",
"type" : "boolean"
            },
            "currentRecord" : {
"description" : "",
"type" : "number"
            },
            "prevUrl" : {
"description" : "",
"type" : "string"
            },
            "nextUrl" : {
"description" : "",
"type" : "string"
            },
            "maxSize" : {
"description" : "",
"type" : "number"
            },
            "pageSize" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO model for general medical record(kertomus) component."
    }
    ,
    "json_KertomusComponentConfig" : {
      "type" : "object",
      "title" : "KertomusComponentConfig",
          "properties" : {
            "kertomusConfigs" : {
"description" : "Method returns all Mediatri kertomus forms configuration.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_KertomusFormConfig"
}
            },
            "titleConfigs" : {
"description" : "",
"type" : "object"
            },
            "mainTitleConfigs" : {
"description" : "",
"type" : "object"
            }
          },
      "description" : "Class to present general configuration for kertomus component.\n\nConfiguration includes two parts:\n<ul>\n<li>available kertomus form configurations KertomusFormConfig used on the client for every lomake of type Lomakeluokka#KERTOMUSTEKSTI.\n<p>This configuration includes name of the titles with any information about types and titles configuration. <\/p><\/li>\n<li>Title's configuration map which contains client configurations ClientTitleConfig for all titles available for the component:<\/li>\n<\/ul>"
    }
    ,
    "json_KertomusEntryEdit" : {
      "type" : "object",
      "title" : "KertomusEntryEdit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "mainTitle" : {
"description" : "",
"type" : "string"
            },
            "titles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EditTitleValue"
}
            },
            "kirjaaja" : {
"description" : "",
"type" : "number"
            },
            "suorittaja" : {
"description" : "",
"type" : "number"
            },
            "status" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusTilaEnum"
            },
            "unitId" : {
"description" : "",
"type" : "number"
            },
            "lockTime" : {
"description" : "",
"type" : "number"
            },
            "kayttajaRyhmaId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO model for kertomus edit."
    }
    ,
    "json_KertomusEntryView" : {
      "type" : "object",
      "title" : "KertomusEntryView",
          "properties" : {
            "id" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "mainTitle" : {
"description" : "",
"type" : "string"
            },
            "unit" : {
"description" : "",
"type" : "string"
            },
            "formName" : {
"description" : "",
"type" : "string"
            },
            "responsible" : {
"description" : "",
"type" : "string"
            },
            "titles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ViewTitleValue"
}
            },
            "kirjaaja" : {
"description" : "",
"type" : "number"
            },
            "suorittaja" : {
"description" : "",
"type" : "number"
            },
            "color" : {
"description" : "",
"type" : "string"
            },
            "vanha" : {
"description" : "",
"type" : "boolean"
            },
            "status" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusTilaEnum"
            },
            "kirjaajaName" : {
"description" : "",
"type" : "string"
            },
            "nakyma" : {
"description" : "",
"type" : "string"
            },
            "unitId" : {
"description" : "",
"type" : "number"
            },
            "kayttajaRyhma" : {
"description" : "",
"type" : "string"
            },
            "kayttajaRyhmaId" : {
"description" : "",
"type" : "number"
            },
            "lockTime" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "DTO model for kertomus view."
    }
    ,
    "json_KertomusFormConfig" : {
      "type" : "object",
      "title" : "KertomusFormConfig",
          "properties" : {
            "lomake" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "mainTitles" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "color" : {
"description" : "",
"type" : "string"
            },
            "kayttajaRyhmaId" : {
"description" : "",
"type" : "number"
            },
            "signing" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            }
          },
      "description" : "Configuration for one kertomus lomake.\n\nThe list of main titles for every form is fetched from asetus table.\nAsetus for main titles has following format in asetus table:\n- asetus: 'P��%'\n- teksti: name of p��otsikko"
    }
    ,
    "json_KertomusID" : {
      "type" : "object",
      "title" : "KertomusID",
          "properties" : {
            "formId" : {
"description" : "",
"type" : "number"
            },
            "aika" : {
"description" : "",
"type" : "number"
            },
            "ownerId" : {
"description" : "",
"type" : "number"
            },
            "reportId" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_KertomusTilaEnum" : {
      "type" : "string",
      "title" : "KertomusTilaEnum",
          "enum" : [
            "KERTOMUS_LUONNOS",
            "KERTOMUS_KESKEN",
            "KERTOMUS_VALMIS",
            "KERTOMUS_UNDEFIND"
          ],
      "description" : ""
    }
    ,
    "json_Koodisto" : {
      "type" : "object",
      "title" : "Koodisto",
          "properties" : {
            "headers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "koodisto" : {
"description" : "",
"type" : "array",
"items" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "values" : {
"description" : "THIS API IS ONLY WHEN DESERIALIZING",
"type" : "object"
            },
            "key" : {
"description" : "THIS API IS ONLY WHEN DESERIALIZING",
"type" : "string"
            }
          },
      "description" : "Simple koodisto for sending koodisto to client side.\n\nThis is has special mapping in jacksonconfigurator- &gt; it parses the koodisto to quick-json.\nKoodisto can have headers and values and first column is used as access-key for json.\n\nHeaders is optional.\n\nExample:\n\n<pre>\n | id | short name | long name |\n | 1  | YLE        | Yleisl��ketiede |\n | 2  | PSY        | Psykiatria |\n <\/pre>\nbecomes:\n<pre>\n{\notsikot: [short name, long name],\nkoodisto: {\n1:[YLE, Yleisl��ketiede],\n2:[PSY, Psykiatria]\n}\n<\/pre>"
    }
    ,
    "json_KuhaDtoBase" : {
      "type" : "object",
      "title" : "KuhaDtoBase",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "created" : {
"description" : "",
"type" : "number"
            },
            "modified" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_KuhaDtoNameBase" : {
      "type" : "object",
      "title" : "KuhaDtoNameBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "abbr" : {
"description" : "Note: in CourseDto and CoursePeriodDto this is used as a field tunniste. (Unique and Mandatory)",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Base class for data transfer objects for objects with name/abbreviation/description data."
    }
    ,
    "json_Laake" : {
      "type" : "object",
      "title" : "Laake",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "koodi" : {
"description" : "",
"type" : "string"
            },
            "nimi" : {
"description" : "",
"type" : "string"
            },
            "valmistaja" : {
"description" : "",
"type" : "number"
            },
            "ehto" : {
"description" : "",
"type" : "string"
            },
            "varoituksia" : {
"description" : "",
"type" : "string"
            },
            "erityispiirre" : {
"description" : "",
"type" : "string"
            },
            "erityisluvallinen" : {
"description" : "",
"type" : "object"
            },
            "laakemuoto" : {
"description" : "",
"type" : "string"
            },
            "vahvuus" : {
"description" : "",
"type" : "string"
            },
            "vahvuusarvo" : {
"description" : "",
"type" : "number"
            },
            "vahvuusyksikko" : {
"description" : "",
"type" : "string"
            },
            "pakkaus" : {
"description" : "",
"type" : "string"
            },
            "pakkauskerroin" : {
"description" : "",
"type" : "number"
            },
            "pakkausarvo" : {
"description" : "",
"type" : "number"
            },
            "pakkausyksikko" : {
"description" : "",
"type" : "string"
            },
            "pakkaustyyppi" : {
"description" : "",
"type" : "string"
            },
            "laite" : {
"description" : "",
"type" : "string"
            },
            "hinta" : {
"description" : "",
"type" : "number"
            },
            "reseptiteksti" : {
"description" : "",
"type" : "string"
            },
            "korvattavuus" : {
"description" : "",
"type" : "string"
            },
            "substituutioryhma" : {
"description" : "",
"type" : "string"
            },
            "alkupera" : {
"description" : "",
"type" : "object"
            },
            "tila" : {
"description" : "",
"type" : "object"
            },
            "halytys" : {
"description" : "",
"type" : "string"
            },
            "erityislupaVanhenee" : {
"description" : "",
"type" : "number"
            },
            "vero" : {
"description" : "",
"type" : "string"
            },
            "peruslaakevalikoima" : {
"description" : "",
"type" : "string"
            },
            "kelpoisuusaika" : {
"description" : "",
"type" : "string"
            },
            "sailytys" : {
"description" : "",
"type" : "string"
            },
            "velvoitevarasto" : {
"description" : "",
"type" : "number"
            },
            "varoitusraja" : {
"description" : "",
"type" : "number"
            },
            "kappalevarasto" : {
"description" : "",
"type" : "string"
            },
            "tukkuhinta" : {
"description" : "",
"type" : "number"
            },
            "tarjoushinta" : {
"description" : "",
"type" : "number"
            },
            "sopimustoimittaja" : {
"description" : "",
"type" : "number"
            },
            "huomautuksia" : {
"description" : "",
"type" : "string"
            },
            "suoritelinkki" : {
"description" : "",
"type" : "number"
            },
            "kustannuslinkki" : {
"description" : "",
"type" : "number"
            },
            "poistettu" : {
"description" : "",
"type" : "object"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            },
            "tilasto1" : {
"description" : "",
"type" : "string"
            },
            "tilasto2" : {
"description" : "",
"type" : "string"
            },
            "tilasto3" : {
"description" : "",
"type" : "string"
            },
            "laaketietokantaversio" : {
"description" : "",
"type" : "string"
            },
            "koodityyppi" : {
"description" : "",
"type" : "string"
            },
            "tukkunumero" : {
"description" : "",
"type" : "string"
            },
            "laji" : {
"description" : "",
"type" : "string"
            },
            "myyntiluvanHaltija" : {
"description" : "",
"type" : "string"
            },
            "myyntilupanumero" : {
"description" : "",
"type" : "string"
            },
            "rinnakkaisvalmiste" : {
"description" : "",
"type" : "string"
            },
            "laakemuototunnus" : {
"description" : "",
"type" : "string"
            },
            "substituutiokoodi" : {
"description" : "",
"type" : "string"
            },
            "laakevaihto" : {
"description" : "",
"type" : "string"
            },
            "viitehinta" : {
"description" : "",
"type" : "number"
            },
            "hintaputki" : {
"description" : "",
"type" : "number"
            },
            "reseptivalmiste" : {
"description" : "",
"type" : "string"
            },
            "maaraamisehto" : {
"description" : "",
"type" : "string"
            },
            "huume" : {
"description" : "",
"type" : "string"
            },
            "liikennevaara" : {
"description" : "",
"type" : "string"
            },
            "lapsille" : {
"description" : "",
"type" : "string"
            },
            "annosjakelu" : {
"description" : "",
"type" : "string"
            },
            "jakouurre" : {
"description" : "",
"type" : "string"
            },
            "hintamuutos" : {
"description" : "",
"type" : "string"
            },
            "suorakorvauskoodi" : {
"description" : "",
"type" : "string"
            },
            "pkv" : {
"description" : "",
"type" : "string"
            },
            "valmistusohje" : {
"description" : "",
"type" : "string"
            },
            "lisatiedot" : {
"description" : "",
"type" : "string"
            },
            "atc" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeAtc"
}
            },
            "annostusSoveltuvuus" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeAnnostusSoveltuvuus"
}
            },
            "yhteisvaikutus" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeYhteisvaikutus"
}
            },
            "vastaAihe" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeVastaAihe"
}
            },
            "terapiaryhma" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeTerapiaryhma"
}
            },
            "koostumus" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeKoostumus"
}
            },
            "tiivistelma" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeTiivistelma"
}
            },
            "seloste" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeSeloste"
}
            },
            "laakeaineet" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeAine"
}
            }
          }
        }
      ],
      "description" : "DTO for Laake, data base table LAAKE_VALMISTE"
    }
    ,
    "json_LaakeAine" : {
      "type" : "object",
      "title" : "LaakeAine",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "laake" : {
"description" : "Get medicine vnr code",
"type" : "string"
            },
            "aine" : {
"description" : "Get medicine ingredient",
"type" : "string"
            },
            "maara" : {
"description" : "Get ingredient amount",
"type" : "number"
            },
            "yksikko" : {
"description" : "Get ingredient amount unit",
"type" : "string"
            },
            "alkupera" : {
"description" : "Get the origin\n-'O' if added by organization\n-'A' or 'M' otherwise",
"type" : "object"
            },
            "ainekoodi" : {
"description" : "Get the code for the ingredient (l��ketietokannasta)",
"type" : "string"
            },
            "atc" : {
"description" : "Get the ATC code, if available",
"type" : "string"
            },
            "jarjestys" : {
"description" : "Get the order number for the ingredient, if available",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LaakeAine, data base table LAAKE_AINE\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_AINE.html"
    }
    ,
    "json_LaakeAnnostus" : {
      "type" : "object",
      "title" : "LaakeAnnostus",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "numero" : {
"description" : "Returns the id of the dosage",
"type" : "number"
            },
            "selite" : {
"description" : "Returns the explanation of the dosage",
"type" : "string"
            },
            "alaikaraja" : {
"description" : "Returns the lower age limit",
"type" : "number"
            },
            "ylaikaraja" : {
"description" : "Returns the upper age limit",
"type" : "number"
            },
            "alapainoraja" : {
"description" : "Returns the lower weight limit",
"type" : "number"
            },
            "ylapainoraja" : {
"description" : "Returns the upper weight limit",
"type" : "number"
            },
            "malli" : {
"description" : "Returns the model for the prescription text",
"type" : "string"
            },
            "desimaaleja" : {
"description" : "Returns the amount of decimals in prescription text",
"type" : "number"
            },
            "painokerroin" : {
"description" : "Returns 'K' if dosage should be multiplied by patients weight",
"type" : "object"
            },
            "annettavaMaara" : {
"description" : "Returns the size of the single dosage",
"type" : "number"
            },
            "annettavaMaksimi" : {
"description" : "Returns the maximum size of a single dosage",
"type" : "number"
            },
            "annettavaYksikko" : {
"description" : "Returns the unit of the single dosage",
"type" : "string"
            },
            "antotahti" : {
"description" : "Returns the speed of dosing",
"type" : "number"
            },
            "antotahtiYksikko" : {
"description" : "Returns the unit of the dosing speed",
"type" : "string"
            },
            "kokonaiskesto" : {
"description" : "Returns the total duratio of the dosage",
"type" : "string"
            },
            "kokonaismaara" : {
"description" : "Returns the total amount of the dosage",
"type" : "number"
            },
            "kokonaismaaraYksikko" : {
"description" : "Returns the unit of total amount of the dosage",
"type" : "string"
            },
            "varmistus" : {
"description" : "Returns the confirmation for the dosage\n-'K' if \"sic!\" should be added to the prescription text\n-'E' otherwise",
"type" : "object"
            },
            "kayttotarkoitus" : {
"description" : "Returns the use of the dosage",
"type" : "string"
            },
            "ohjeet" : {
"description" : "Returns the instructions of the dosage",
"type" : "string"
            },
            "iterointi" : {
"description" : "Returns the iteration",
"type" : "number"
            },
            "pysyva" : {
"description" : "Returns the permanence of the dosage\n-'K' pysyv�\n-'E' otherwise",
"type" : "object"
            },
            "tarvittaessa" : {
"description" : "Returns if the medicine is taken when needed\n-'K' tarvittaessa\n-'E' otherwise",
"type" : "object"
            },
            "perusteluVaaditaan" : {
"description" : "Returns 'K' if Kela wants user to explain the usage of medicine. 'E' otherwise.",
"type" : "object"
            },
            "antoreitit" : {
"description" : "Returns \"antoreitit\" for the medicine",
"type" : "string"
            },
            "antopaikat" : {
"description" : "Returns \"antopaikat\" for the medicine",
"type" : "string"
            },
            "antovalineet" : {
"description" : "Returns \"antov�lineet\" for the medicine",
"type" : "string"
            },
            "antotavat" : {
"description" : "Returns \"antotavat\" for the medicine",
"type" : "string"
            },
            "alkupera" : {
"description" : "Returns the origin of the dosage\n-'O' if current organization\n-'A' or 'M' otherwise",
"type" : "object"
            },
            "poistettu" : {
"description" : "Returns the code of the dosage removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the dosage",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            },
            "kenen" : {
"description" : "Returns whose dosage it is",
"type" : "number"
            },
            "lyhyesti" : {
"description" : "Returns a summary of the dosage",
"type" : "string"
            },
            "toisto" : {
"description" : "Returns the repetition of the dosage",
"type" : "string"
            },
            "toistokuvaus" : {
"description" : "Returns the repetition in plain language",
"type" : "string"
            },
            "aikayksikko" : {
"description" : "Returns the time unit used",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LaakeAnnostus\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_ANNOSTUS.html"
    }
    ,
    "json_LaakeAnnostusSoveltuvuus" : {
      "type" : "object",
      "title" : "LaakeAnnostusSoveltuvuus",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "laake" : {
"description" : "Returns the vnr code of the medicine",
"type" : "string"
            },
            "alkupera" : {
"description" : "Returns the origin of the dosage\n-'O' if current organization\n-'A' or 'M' otherwise",
"type" : "string"
            },
            "annostus" : {
"description" : "Returns the dosage object",
"$ref" : "#/definitions/json_LaakeAnnostus"
            }
          }
        }
      ],
      "description" : "DTO for LaakeAnnostusSoveltuvuus\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_ANNOSTUS_SOVELTUVUUS.html"
    }
    ,
    "json_LaakeAtc" : {
      "type" : "object",
      "title" : "LaakeAtc",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "atc" : {
"description" : "",
"type" : "string"
            },
            "alkupera" : {
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : "DTO for LaakeAtc, data base table LAAKE_ATC"
    }
    ,
    "json_LaakeKoostumus" : {
      "type" : "object",
      "title" : "LaakeKoostumus",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "osa" : {
"description" : "Returns the part number of the medicine component",
"type" : "number"
            },
            "tyyppi" : {
"description" : "Returns the type of the medicine component\n-'B' if \"pohja-aine\"\n-Perusaine, johon lis�aineet sekoitetaan\n-'A' if \"lis�aine\"\n-Lis�aineet ovat yleens� varsinaisia vaikuttavia aineita",
"type" : "object"
            },
            "komponentinKoodi" : {
"description" : "Returns the component code (VNR code)",
"type" : "string"
            },
            "komponentti" : {
"description" : "Returns the component in text format",
"type" : "string"
            },
            "maara" : {
"description" : "Returns the amount of component",
"type" : "number"
            },
            "yksikko" : {
"description" : "Returns the unit of amount",
"type" : "string"
            },
            "vahvuus" : {
"description" : "Returns the strength of the component",
"type" : "number"
            },
            "vahvuusyksikko" : {
"description" : "Returns the unit of strength",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LaakeKoostumus\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_KOOSTUMUS.html"
    }
    ,
    "json_LaakeSeloste" : {
      "type" : "object",
      "title" : "LaakeSeloste",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "seloste" : {
"description" : "Returns the id of the medication description",
"type" : "number"
            },
            "nimi" : {
"description" : "Returns the name of the medication",
"type" : "string"
            },
            "ehto" : {
"description" : "Returns the preconditions for the medicine\n(m��r�ys-/toimitusehto)",
"type" : "string"
            },
            "valmistaja" : {
"description" : "Returns the manufacturer of the medicine",
"type" : "string"
            },
            "poistettu" : {
"description" : "Returns the code of the description removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the desctription",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            },
            "tekstit" : {
"description" : "Returns a list of description texts",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeSelosteTeksti"
}
            }
          }
        }
      ],
      "description" : "DTO for LaakeSeloste\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_SELOSTE.html\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_SELOSTE_SOVELTUVUUS.html"
    }
    ,
    "json_LaakeSelosteTeksti" : {
      "type" : "object",
      "title" : "LaakeSelosteTeksti",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "osa" : {
"description" : "Returns the part number of the description, can be used to order descriptions",
"type" : "number"
            },
            "otsikko" : {
"description" : "Returns the header of the description",
"type" : "number"
            },
            "teksti" : {
"description" : "Returns the text of the description",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LaakeSelosteTeksti\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_SELOSTE_TEKSTI.html"
    }
    ,
    "json_LaakeTerapiaryhma" : {
      "type" : "object",
      "title" : "LaakeTerapiaryhma",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "terapiaryhma" : {
"description" : "Returns the code of the therapy group",
"type" : "string"
            },
            "alkupera" : {
"description" : "Returns the origin of the therapy group\n-'O' if therapy group is linked in the current organization\n-'A' or 'M' otherwise",
"type" : "object"
            },
            "nimi" : {
"description" : "Returns the name of the therapy group",
"type" : "string"
            },
            "taso" : {
"description" : "Returns the level of the therapy group\n-1 is the highest level, lower levels are >1",
"type" : "number"
            },
            "poistettu" : {
"description" : "Returns the code of the therapy group removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            }
          }
        }
      ],
      "description" : "DTO for LaakeTerapiaryhma\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_TERAPIARYHMA.html\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/TERAPIARYHMA.html"
    }
    ,
    "json_LaakeTiivistelma" : {
      "type" : "object",
      "title" : "LaakeTiivistelma",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "tiivistelma" : {
"description" : "Returns the id of the summary",
"type" : "number"
            },
            "nimi" : {
"description" : "Returns the name of the medicine the summary is about",
"type" : "string"
            },
            "ehto" : {
"description" : "Returns the preconditions for the medicine\n(m��r�ys-/toimitusehto)",
"type" : "string"
            },
            "valmistaja" : {
"description" : "Returns the manufacturer",
"type" : "string"
            },
            "korvattavuus" : {
"description" : "Returns the refundability",
"type" : "string"
            },
            "poistettu" : {
"description" : "Returns the code of the summary removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the summary",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            },
            "tekstit" : {
"description" : "Returns a list of summary texts",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakeTiivistelmaTeksti"
}
            }
          }
        }
      ],
      "description" : "DTO for LaakeTiivistelma\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_TIIVISTELMA.html\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_TIIVISTELMA_SOVELTUVUUS.html"
    }
    ,
    "json_LaakeTiivistelmaTeksti" : {
      "type" : "object",
      "title" : "LaakeTiivistelmaTeksti",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "osa" : {
"description" : "Returns the part number of the summary text, can be used to order summaries",
"type" : "number"
            },
            "otsikko" : {
"description" : "Returns the header of the",
"type" : "number"
            },
            "teksti" : {
"description" : "Returns the summary text",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LaakeTiivistelmaTeksti\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_TIIVISTELMA_TEKSTI.html"
    }
    ,
    "json_LaakeVastaAihe" : {
      "type" : "object",
      "title" : "LaakeVastaAihe",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "vastaAihe" : {
"description" : "Returns the id",
"type" : "number"
            },
            "vastaAiheAlkupera" : {
"description" : "Returns the origin of the contraindication",
"type" : "object"
            },
            "selite" : {
"description" : "Returns the name of the contraindication in plain language",
"type" : "string"
            },
            "rajoite" : {
"description" : "Returns the type of the contraindication\n-'Y' age in years\n-'M' age in months\n-'W' age in weeks\n-'G' weight\n-'P' pregnancy\n-'B' breastfeeding\n-'D' diagnose\n-'1' male\n-'2' female",
"type" : "object"
            },
            "alaraja" : {
"description" : "Returns the lower limit of the contraindication",
"type" : "number"
            },
            "ylaraja" : {
"description" : "Returns the upper limit of the contraindication",
"type" : "number"
            },
            "alkupera" : {
"description" : "Returns the origin of the contraindication\n-'O' if therapy group is linked in the current organization\n-'A' or 'M' otherwise",
"type" : "object"
            },
            "poistettu" : {
"description" : "Returns the code of the contraindication removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the contraindication",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LaakeVastaAihe\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_VASTA_AIHE.html\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/VASTA_AIHE.html"
    }
    ,
    "json_LaakeYhteisvaikutus" : {
      "type" : "object",
      "title" : "LaakeYhteisvaikutus",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "aine" : {
"description" : "Returns the ATC code or the name of the agent (atc tai vaikuttava aine)",
"type" : "string"
            },
            "koodisto" : {
"description" : "Returns the used code system\n-If getAine returns an ATC code, getKoodisto returns \"ATC\"",
"type" : "string"
            },
            "alkupera" : {
"description" : "Returns the origin of interaction\n-'O' if interaction is linked in the current organization\n-'A' or 'M' otherwise",
"type" : "object"
            }
          }
        }
      ],
      "description" : "DTO for Yhteisvaikutus\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKE_YHTEISVAIKUTUS.html"
    }
    ,
    "json_Laakitys" : {
      "type" : "object",
      "title" : "Laakitys",
          "properties" : {
            "omistaja" : {
"description" : "Maps to columns\n<ul>\n<li>LaakitysHistoriaPK#getOmistaja()\n<\/ul>",
"type" : "number"
            },
            "osa" : {
"description" : "Maps to columns\n<ul>\n<li>LaakitysHistoriaPK#getOsa()\n<\/ul>",
"type" : "number"
            },
            "nimi" : {
"description" : "Maps to columns\n<ul>\n<li>LaakeValmisteEntity#getNimi()\n<\/ul>",
"type" : "string"
            },
            "annostus" : {
"description" : "",
"type" : "string"
            },
            "aloitusPvm" : {
"description" : "",
"type" : "number"
            },
            "lopetusPvm" : {
"description" : "",
"type" : "number"
            },
            "kokoNimi" : {
"description" : "",
"type" : "string"
            },
            "kertaAnnos" : {
"description" : "",
"type" : "string"
            },
            "toistokuvaus" : {
"description" : "",
"type" : "string"
            },
            "maaraaja" : {
"description" : "",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "",
"type" : "string"
            },
            "huomautuksia" : {
"description" : "",
"type" : "string"
            },
            "ohjeet" : {
"description" : "",
"type" : "string"
            },
            "kellonajat" : {
"description" : "",
"type" : "string"
            },
            "annosteluteksti" : {
"description" : "",
"type" : "string"
            },
            "kayttotarkoitus" : {
"description" : "",
"type" : "string"
            },
            "aikayksikko" : {
"description" : "",
"type" : "string"
            },
            "antotahti" : {
"description" : "",
"type" : "string"
            },
            "laakeaineet" : {
"description" : "",
"type" : "string"
            },
            "kuitattava" : {
"description" : "",
"type" : "string"
            },
            "tauonAloitusPvm" : {
"description" : "",
"type" : "number"
            },
            "tauonLopetusPvm" : {
"description" : "",
"type" : "number"
            },
            "taukohuomautuksia" : {
"description" : "",
"type" : "string"
            },
            "reseptityyppi" : {
"description" : "",
"type" : "string"
            },
            "laakitysKayttoaiheList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysKayttoaiheView"
}
            },
            "annettavaMaara" : {
"description" : "",
"type" : "number"
            },
            "annettavaMaksimi" : {
"description" : "",
"type" : "number"
            },
            "annettavaYksikko" : {
"description" : "",
"type" : "string"
            },
            "laake" : {
"description" : "return Medicine VNR Code Maps to columns\n<ul>\n<li>LaakeValmisteEntity#getKoodi()\n<\/ul>",
"type" : "string"
            },
            "vrkmaara" : {
"description" : "",
"type" : "number"
            },
            "vrkmaaraYksikko" : {
"description" : "",
"type" : "string"
            },
            "vaihtelevaAnnostus" : {
"description" : "",
"type" : "string"
            },
            "vaihteleva" : {
"description" : "",
"type" : "boolean"
            },
            "paino" : {
"description" : "",
"type" : "number"
            },
            "annettavaMaaraTimesPaino" : {
"description" : "",
"type" : "number"
            },
            "vrkkerratCalc" : {
"description" : "",
"type" : "number"
            },
            "vrkmaaraCalc" : {
"description" : "",
"type" : "number"
            },
            "tauot" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysTauko"
}
            },
            "annot" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysAnto"
}
            },
            "tavat" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysTapa"
}
            },
            "kayttoaiheet" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysKayttoaihe"
}
            },
            "kuittaukset" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysKuittaus"
}
            }
          },
      "description" : "DTO for Laakitys"
    }
    ,
    "json_LaakitysAnto" : {
      "type" : "object",
      "title" : "LaakitysAnto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "antaja" : {
"description" : "Returns the id of the medication giver",
"type" : "number"
            },
            "huomautuksia" : {
"description" : "Returns the observetion comments related to the medication giving",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "Returns the id of the actual person that fed this info to the DB/system",
"type" : "number"
            },
            "laake" : {
"description" : "Returns the laake VNR. VNR is a code that is used to identify the medication. @see http://www.laaketietokeskus.fi/vnr",
"type" : "string"
            },
            "maara" : {
"description" : "Returns the medication amount",
"type" : "number"
            },
            "muutosAika" : {
"description" : "Returns the actual DB-change time of the medication giving",
"type" : "number"
            },
            "omistaja" : {
"description" : "Returns the owner ie. patients mediatri id.",
"type" : "number"
            },
            "osa" : {
"description" : "Retuns the part number that is the id of the medication together with alku and omistaja",
"type" : "number"
            },
            "poistettu" : {
"description" : "Returns the code of the medication time removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "suunniteltuAika" : {
"description" : "Returns the planned time for medication. Tells which time the medication should be given",
"type" : "number"
            },
            "toteutunutAika" : {
"description" : "Returns the actual time of medication. Mapped from PK id ALKU",
"type" : "number"
            },
            "toteutunutAikaLoppu" : {
"description" : "Returns the actual end time of medication. a.k.a. LOPPU",
"type" : "number"
            },
            "tyyppi" : {
"description" : "Returns the type of LaakitysAnto object, 1 = planned and given, 2 = planned but not yet given, 3 = extra",
"type" : "number"
            },
            "yksikko" : {
"description" : "Returns the used unit. ml, l, etc.",
"type" : "string"
            },
            "kirjaajaName" : {
"description" : "Returns the name of the actual person that fed this info to the DB/system",
"type" : "string"
            },
            "antajaName" : {
"description" : "Returns the name of the medication giver",
"type" : "string"
            },
            "annettavaMaara" : {
"description" : "Returns the base amount that is given if swiped. Also the lower border of the amount.",
"type" : "number"
            },
            "annettavaYksikko" : {
"description" : "Returns the base unit that is described by laakityshistoria.",
"type" : "string"
            },
            "annettavaMaksimi" : {
"description" : "Returns the uuper border of the amount.",
"type" : "number"
            },
            "toteutunutAikaOriginal" : {
"description" : "Original time of medication. mapped from PK id ALKU. This PK is modified so to find the modifiable row the old row must be also given.",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LaakitysAnto.\n\n* A class to present LAAKITYS_ANTO table in medication functionality.\nUsed to carry the data from database to the client side.\n\n<table style=\"border: 1px solid black;\">\n<tr><th>property<\/th><th>only for frontend<\/th><th>obligatory from api<\/th><th>editable<\/th><th>must be same as laakityshistorias<\/th><\/tr>\n<tr><td>antaja<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>huomautuksia<\/td><td>no<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>kello<\/td><td>no<\/td><td>yes (in planned)<\/td><td>yes<\/td><td>yes (all in one field)<\/td><\/tr>\n<tr><td>kirjaaja<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>laake<\/td><td>yes<\/td><td>no (added by api)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>maara<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>muutosAika<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>omistaja<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>osa<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>poistettu<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAika<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAikaOriginal<\/td><td>no<\/td><td>yes (only for editing)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAikaLoppu<\/td><td>no<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>tyyppi<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>yksikko<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>kirjaajaName<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>antajaName<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaMaara<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaYksikko<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaMaksimi<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<\/table>"
    }
    ,
    "json_LaakitysKayttoaihe" : {
      "type" : "object",
      "title" : "LaakitysKayttoaihe",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "rivi" : {
"description" : "Returns the row number, which arranges the LaakitysKayttoaihe entities in order of importance",
"type" : "number"
            },
            "numero" : {
"description" : "Returns the unique id of Kayttoaihe",
"type" : "number"
            },
            "selite" : {
"description" : "Returns the name of the Kayttoaihe in plain languate",
"type" : "string"
            },
            "reseptiteksti" : {
"description" : "Returns the name of the Kayttoaihe which is printed to the prescription",
"type" : "string"
            },
            "alkupera" : {
"description" : "Returns the origin of the Kayttoaihe\n-\"O\" if added by organization itself\n-\"A\" or \"M\" otherwise",
"type" : "object"
            },
            "tyyppi" : {
"description" : "Returns the type of the Kayttoaihe\n-\"C\" if Kayttoaihe\n-\"G\" if group\n-\"D\" if deleted",
"type" : "object"
            },
            "poistettu" : {
"description" : "Returns the code of the kayttoaihe removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the Kayttoaihe",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LAAKITYS_KAYTTOAIHE and KAYTTOAIHE database tables\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKITYS_KAYTTOAIHE.html\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/KAYTTOAIHE.html"
    }
    ,
    "json_LaakitysKayttoaiheView" : {
      "type" : "object",
      "title" : "LaakitysKayttoaiheView",
          "properties" : {
            "omistaja" : {
"description" : "",
"type" : "number"
            },
            "osa" : {
"description" : "",
"type" : "number"
            },
            "rivi" : {
"description" : "",
"type" : "number"
            },
            "numero" : {
"description" : "",
"type" : "number"
            },
            "selite" : {
"description" : "",
"type" : "string"
            },
            "reseptiteksti" : {
"description" : "",
"type" : "string"
            },
            "alkupera" : {
"description" : "",
"type" : "object"
            },
            "tyyppi" : {
"description" : "",
"type" : "object"
            },
            "poistettu" : {
"description" : "",
"type" : "object"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "DTO for LaakitysKayttoaihe\n\nA class to present LAAKITYS_KAYTTOAIHE and KAYTTOAIHE tables in medication functionality\nUsed to carry the data from database to the client side."
    }
    ,
    "json_LaakitysKuittaus" : {
      "type" : "object",
      "title" : "LaakitysKuittaus",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "rooli" : {
"description" : "Returns the role of the user who has made an acknowledgement\n-\"H\" if user is a nurse",
"type" : "object"
            },
            "kuitattu" : {
"description" : "Returns the time of the acknowledgement",
"type" : "number"
            },
            "kuittaaja" : {
"description" : "Returns the user who made the acknowledgement",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LaakitysKuittaus\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKITYS_KUITTAUS.html"
    }
    ,
    "json_LaakitysLista" : {
      "type" : "object",
      "title" : "LaakitysLista",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_BaseModel"
        },
        {
          "properties" : {
            "laakityskategoria" : {
"description" : "Returns the laakityskategoria. Map of laakitysKategorias. Laakityskategoria type as key",
"type" : "object"
            },
            "permissionDTO" : {
"description" : "Returns the permissionDTO object.",
"$ref" : "#/definitions/json_Permission"
            }
          }
        }
      ],
      "description" : "DTO for LaakitysLista"
    }
    ,
    "json_LaakitysTapa" : {
      "type" : "object",
      "title" : "LaakitysTapa",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "reittikoodi" : {
"description" : "Returns the \"antoreitti\" in code",
"type" : "string"
            },
            "reittiteksti" : {
"description" : "Returns the \"antoreitti\" in text",
"type" : "string"
            },
            "paikkakoodi" : {
"description" : "Returns the \"antopaikka\" in code",
"type" : "string"
            },
            "paikkateksti" : {
"description" : "Returns the \"antopaikka\" in text",
"type" : "string"
            },
            "valinekoodi" : {
"description" : "Returns the \"antov�line\" in code",
"type" : "string"
            },
            "valineteksti" : {
"description" : "Returns the \"antov�line\" in text",
"type" : "string"
            },
            "tapakoodi" : {
"description" : "Returns the \"antotapa\" in code",
"type" : "string"
            },
            "tapateksti" : {
"description" : "Returns the \"antotapa\" in text",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LAAKITYS_TAPA\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKITYS_TAPA.html"
    }
    ,
    "json_LaakitysTauko" : {
      "type" : "object",
      "title" : "LaakitysTauko",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "alkaa" : {
"description" : "Returns the starting time of the medication break",
"type" : "number"
            },
            "loppuu" : {
"description" : "Returns the ending time of the medication break",
"type" : "number"
            },
            "huomautuksia" : {
"description" : "Returns the notes about the medication break",
"type" : "string"
            },
            "aloittaja" : {
"description" : "Returns the id of an user who started the medication break",
"type" : "number"
            },
            "lopettaja" : {
"description" : "Returns the id of an user who ended the medication break",
"type" : "number"
            },
            "poistettu" : {
"description" : "Returns the code of the medication break removal. 'E' - not removed, 'K' = removed",
"type" : "object"
            },
            "muutosaika" : {
"description" : "Returns the actual DB-change time of the medication break",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Returns the organization in which the change has been made",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LaakitysTauko\n\nhttp://vc-buildsrv1/documents/mediatridocs/latest/tables/LAAKITYS_TAUKO.html"
    }
    ,
    "json_LaakitysView" : {
      "type" : "object",
      "title" : "LaakitysView",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_BaseModel"
        },
        {
          "properties" : {
            "laakityskategoria" : {
"description" : "Returns the laakityskategoria. Map of laakitysKategorias. Laakityskategoria type as key",
"type" : "object"
            },
            "permissionDTO" : {
"description" : "Returns the permissionDTO object.",
"$ref" : "#/definitions/json_Permission"
            }
          }
        }
      ],
      "description" : "DTO for Medicine"
    }
    ,
    "json_Laatu" : {
      "type" : "string",
      "title" : "Laatu",
          "enum" : [
            "KIELTEINEN",
            "OSITTAIN_KIELTEINEN",
            "MYONTEINEN"
          ],
      "description" : "Palvelup��t�s laatu."
    }
    ,
    "json_LazyLoadedDto" : {
      "type" : "object",
      "title" : "LazyLoadedDto",
          "properties" : {
            "object" : {
"description" : "",
"type" : "object"
            },
            "loaded" : {
"description" : "",
"type" : "boolean"
            },
            "loadUrl" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "DTO-class for any client side lazy loading.\nEg: Patient has lazyloaded hoitosuhde"
    }
    ,
    "json_LockDto" : {
      "type" : "object",
      "title" : "LockDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "reason" : {
"description" : "",
"type" : "string"
            },
            "user" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_LoginCredentials" : {
      "type" : "object",
      "title" : "LoginCredentials",
          "properties" : {
            "username" : {
"description" : "",
"type" : "string"
            },
            "password" : {
"description" : "",
"type" : "string"
            },
            "domainName" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "Overrider LoginCredentials to provide domain-name"
    }
    ,
    "json_Meaning" : {
      "type" : "string",
      "title" : "Meaning",
          "enum" : [
            "AVAILABLE",
            "BUSY_MANDATORY",
            "BUSY_OPTIONAL"
          ],
      "description" : ""
    }
    ,
    "json_Metadata" : {
      "type" : "object",
      "title" : "Metadata",
          "properties" : {
            "groupID" : {
"description" : "",
"type" : "number"
            },
            "groupName" : {
"description" : "",
"type" : "string"
            },
            "metadataID" : {
"description" : "",
"type" : "number"
            },
            "metadataName" : {
"description" : "",
"type" : "string"
            },
            "mandatory" : {
"description" : "",
"type" : "boolean"
            },
            "startDate" : {
"description" : "",
"type" : "number"
            },
            "endDate" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "This  DTO contains information about metadata"
    }
    ,
    "json_MetadataGroup" : {
      "type" : "object",
      "title" : "MetadataGroup",
          "properties" : {
            "groupID" : {
"description" : "",
"type" : "number"
            },
            "groupName" : {
"description" : "",
"type" : "string"
            },
            "startDate" : {
"description" : "",
"type" : "number"
            },
            "endDate" : {
"description" : "",
"type" : "number"
            },
            "metadata" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Metadata"
}
            }
          },
      "description" : "This DTO contains information about metadata group"
    }
    ,
    "json_MittausBase" : {
      "type" : "object",
      "title" : "MittausBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "$ref" : "#/definitions/json_BaseTitleValue"
        },
        {
          "$ref" : "#/definitions/json_ViewTitleValue"
        },
        {
          "properties" : {
            "comment" : {
"description" : "",
"type" : "string"
            },
            "normal" : {
"description" : "",
"type" : "boolean"
            },
            "editable" : {
"description" : "",
"type" : "boolean"
            },
            "owner" : {
"description" : "",
"type" : "number"
            },
            "datetime" : {
"description" : "",
"type" : "number"
            },
            "formId" : {
"description" : "",
"type" : "number"
            },
            "reportId" : {
"description" : "",
"type" : "number"
            },
            "id" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_MittausComponentConfig" : {
      "type" : "object",
      "title" : "MittausComponentConfig",
          "properties" : {
            "kertomusConfigs" : {
"description" : "Method returns all Mediatri kertomus forms configuration.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MittausFormConfig"
}
            }
          },
      "description" : "Class to present general configuration for kertomus component.\nBasic implementation contains list of available kertomus form configurations used on the client.\nKertomus lomake type is Lomakeluokka#KERTOMUSTEKSTI."
    }
    ,
    "json_MittausFormConfig" : {
      "type" : "object",
      "title" : "MittausFormConfig",
          "properties" : {
            "mainTitles" : {
"description" : "",
"type" : "object"
            },
            "kayttajaRyhmaId" : {
"description" : "",
"type" : "number"
            },
            "editable" : {
"description" : "",
"type" : "boolean"
            },
            "permission" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionDTO"
            }
          },
      "description" : "Configuration for Core mittaus component.\n\nThis configuration includes all mittaus titles(type: 183,184) available for the form.\n\nThe list of main titles is fetched from asetus table.\nAsetus for main titles has following format in asetus table:\n- asetus: 'P��%'\n- teksti: name of p��otsikko"
    }
    ,
    "json_NamedGroupMemberDto" : {
      "type" : "object",
      "title" : "NamedGroupMemberDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "skill" : {
"description" : "",
"$ref" : "#/definitions/json_IdNamePair"
            },
            "role" : {
"description" : "",
"$ref" : "#/definitions/json_IdNamePair"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "worker" : {
"description" : "",
"$ref" : "#/definitions/json_Employee"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_OmistajaList" : {
      "type" : "object",
      "title" : "OmistajaList",
          "properties" : {
            "pageIndex" : {
"description" : "",
"type" : "number"
            },
            "pageItemsCount" : {
"description" : "",
"type" : "number"
            },
            "allItemsCount" : {
"description" : "",
"type" : "number"
            },
            "pageSize" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_OmistajaListConfig" : {
      "type" : "object",
      "title" : "OmistajaListConfig",
          "properties" : {
            "basicInfoTitles" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "listId" : {
"description" : "",
"type" : "number"
            },
            "listOwnerId" : {
"description" : "",
"type" : "number"
            },
            "linkedFormInfo" : {
"description" : "",
"$ref" : "#/definitions/json_FormInfo"
            },
            "listName" : {
"description" : "",
"type" : "string"
            },
            "listDataOwnerType" : {
"description" : "",
"$ref" : "#/definitions/json_OwnerTypeInfo"
            }
          },
      "description" : ""
    }
    ,
    "json_OptimizationRightsAndSettings" : {
      "type" : "object",
      "title" : "OptimizationRightsAndSettings",
          "properties" : {
            "form" : {
"description" : "Get information about the Mediatri form and current user rights for optimization.",
"$ref" : "#/definitions/json_FormRights"
            },
            "streetAddressTitle" : {
"description" : "Get the name of the Mediatri title (otsikko) to be used for customer/worker street address.",
"type" : "string"
            },
            "postOfficeTitle" : {
"description" : "Get the name of the Mediatri title (otsikko) to be used for customer/worker post office (postitoimipaikka).",
"type" : "string"
            },
            "travelModeTitle" : {
"description" : "Get the name of the Mediatri title (otsikko) to be used for worker travel mode (kulkutapa).",
"type" : "string"
            },
            "byFootTerm" : {
"description" : "Get the term used to mean traveling by foot in Mediatri.",
"type" : "string"
            },
            "byCarTerm" : {
"description" : "* Get the term used to mean traveling by car in Mediatri.",
"type" : "string"
            },
            "byBicycleTerm" : {
"description" : "Get the term used to mean traveling by bike in Mediatri.",
"type" : "string"
            }
          },
      "description" : "Data transfer object for event optimization rights and settings."
    }
    ,
    "json_Optional" : {
      "type" : "object",
      "title" : "Optional",
          "properties" : {
            "present" : {
"description" : "",
"type" : "boolean"
            }
          },
      "description" : ""
    }
    ,
    "json_Osastokartta" : {
      "type" : "object",
      "title" : "Osastokartta",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "listat" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Osastolista"
}
            },
            "tilanteet" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OsastolistaTilannekoodi"
}
            },
            "ryhmat" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Potilasryhma"
}
            }
          }
        }
      ],
      "description" : "This is the configuration for all paikka's.\nContains ASETUKSET from paikkahistoria.\nEach Osastokartta consist of multiple different Osastolista"
    }
    ,
    "json_Osastolista" : {
      "type" : "object",
      "title" : "Osastolista",
          "properties" : {
            "paikkatiedot" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OsastolistaPaikkatieto"
}
            },
            "nimi" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "This is one item inside Osastolista"
    }
    ,
    "json_OsastolistaPaikkatieto" : {
      "type" : "object",
      "title" : "OsastolistaPaikkatieto",
          "properties" : {
            "patient" : {
"description" : "",
"$ref" : "#/definitions/json_Patient"
            },
            "paikka" : {
"description" : "",
"type" : "string"
            },
            "tilanneKoodi" : {
"description" : "",
"type" : "string"
            },
            "ryhmaKoodit" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "riskitietoja" : {
"description" : "",
"type" : "boolean"
            },
            "suunniteltu" : {
"description" : "",
"type" : "boolean"
            }
          },
      "description" : "This is one paikka inside Osastolista"
    }
    ,
    "json_OsastolistaTilannekoodi" : {
      "type" : "object",
      "title" : "OsastolistaTilannekoodi",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "koodi" : {
"description" : "",
"type" : "string"
            },
            "variRGB" : {
"description" : "",
"type" : "string"
            },
            "selitys" : {
"description" : "",
"type" : "string"
            },
            "vihje" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Dto for Tilanne in osastolista.\nThis is found from paikkahistoria-form \"Tilanne\"."
    }
    ,
    "json_OwnerTypeInfo" : {
      "type" : "object",
      "title" : "OwnerTypeInfo",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_PaatosSeurantaTilaCodes" : {
      "type" : "string",
      "title" : "PaatosSeurantaTilaCodes",
          "enum" : [
            "SUUNNITELTU",
            "MUUTETTU",
            "KESKEYTETTY",
            "KESKEN",
            "TOTEUTUNUT",
            "ITSE_PERUNUT",
            "PERUUTETTU",
            "EI_TOTEUTUNUT"
          ],
      "description" : ""
    }
    ,
    "json_Palvelukeskeytys" : {
      "type" : "object",
      "title" : "Palvelukeskeytys",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "alkaa" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "paatos" : {
"description" : "",
"type" : "number"
            },
            "syy" : {
"description" : "",
"type" : "string"
            },
            "loppuu" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "alkuaika" : {
"description" : "",
"$ref" : "#/definitions/json_Time"
            },
            "loppuaika" : {
"description" : "",
"$ref" : "#/definitions/json_Time"
            },
            "alusta" : {
"description" : "",
"type" : "boolean"
            },
            "laskutetaan" : {
"description" : "",
"type" : "number"
            },
            "huomautuksia" : {
"description" : "",
"type" : "string"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "poistettu" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "DTO for palvelukeskeytys (related to palvelup��t�kses)"
    }
    ,
    "json_Palveluluokka" : {
      "type" : "object",
      "title" : "Palveluluokka",
          "properties" : {
            "tunnus" : {
"description" : "",
"type" : "string"
            },
            "nimi" : {
"description" : "",
"type" : "string"
            },
            "kayttajaryhma" : {
"description" : "",
"type" : "string"
            },
            "palvelunTarveOtsikko" : {
"description" : "",
"type" : "string"
            },
            "paatostekstinOtsikko" : {
"description" : "",
"type" : "string"
            },
            "lakipykalat" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "suoritekoodi" : {
"description" : "",
"type" : "string"
            },
            "diaarinumerosarja" : {
"description" : "",
"type" : "string"
            },
            "paatosAvoin" : {
"description" : "",
"type" : "boolean"
            },
            "riviotsikko" : {
"description" : "",
"type" : "string"
            },
            "sarakeotsikko" : {
"description" : "",
"type" : "string"
            },
            "laskutusTapahtumienMukaisesti" : {
"description" : "",
"type" : "boolean"
            },
            "tukipalvelu" : {
"description" : "",
"type" : "boolean"
            },
            "paattajaryhmanOtsikko" : {
"description" : "",
"type" : "string"
            },
            "palvelunimikkeisto" : {
"description" : "",
"type" : "string"
            },
            "tapahtumamalli" : {
"description" : "",
"type" : "string"
            },
            "laskettavatTilat" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PaatosSeurantaTilaCodes"
}
            }
          },
      "description" : "Stores the information of the following ASETUS-table fields configured for Palveluluokkas:\n\n0.  Nimi (Yleiset tab)\n1.  K�ytt�j�ryhm� (Yleiset tab)\n2.  Palvelun tarve-otsikko (Yleiset tab)\n3.  P��t�stekstin otsikko (Yleiset tab)\n4.  Lakipyk�l�t (Yleiset tab)\n5.  Suoritekoodi (parsed, but not added Core DTO)\n6.  Diaarinumerosarja (Yleiset tab)\n7.  P��t�s avoin (K/E, Yleiset tab)\n8.  Riviotsikko (Maksuperusteet tab)\n9.  Sarakeotsikko (Maksuperusteet tab)\n10. (not used currently in Mediatri)\n11. Laskutus tapahtumien mukaisesti (K/E, Seuranta tab)\n12. Tukipalvelu  (K/E, Yleiset tab)\n13. (a field related to Suorite-handling, parsed, but not added Core DTO))\n14. P��tt�j�ryhm�n otsikko (Yleiset tab)\n15. (not used currently in Mediatri)\n16. Palvelunimikkeist� ((Yleiset tab)\n17. Tapahtumamalli (Yleiset tab)"
    }
    ,
    "json_Palvelupaatos" : {
      "type" : "object",
      "title" : "Palvelupaatos",
          "properties" : {
            "paatos" : {
"description" : "",
"type" : "number"
            },
            "palveluluokkaTunnus" : {
"description" : "",
"type" : "string"
            },
            "palveluluokka" : {
"description" : "",
"$ref" : "#/definitions/json_Palveluluokka"
            },
            "alkaa" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "diaarinumero" : {
"description" : "",
"type" : "string"
            },
            "haettu" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "huomautuksia" : {
"description" : "",
"type" : "string"
            },
            "kayttajaryhma" : {
"description" : "",
"type" : "number"
            },
            "kustannuspaikka" : {
"description" : "",
"type" : "number"
            },
            "kuukausimaksu" : {
"description" : "",
"type" : "number"
            },
            "laki" : {
"description" : "",
"type" : "string"
            },
            "laskutusalkaa" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "loppuu" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "luokittelu1" : {
"description" : "",
"type" : "string"
            },
            "luokittelu2" : {
"description" : "",
"type" : "string"
            },
            "maara" : {
"description" : "",
"type" : "number"
            },
            "maksuperuste" : {
"description" : "",
"type" : "string"
            },
            "mitatoija" : {
"description" : "",
"type" : "number"
            },
            "mitatoijaUser" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "mitatointisyy" : {
"description" : "",
"type" : "string"
            },
            "mitatoity" : {
"description" : "",
"type" : "number"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            },
            "paatetty" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "paatosyksikko" : {
"description" : "",
"type" : "number"
            },
            "paatosyksikkoUnit" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "paattaja" : {
"description" : "",
"type" : "number"
            },
            "paattajaUser" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "paattajaryhma" : {
"description" : "",
"type" : "string"
            },
            "poistettu" : {
"description" : "",
"type" : "boolean"
            },
            "tarve" : {
"description" : "",
"type" : "string"
            },
            "teksti" : {
"description" : "",
"type" : "string"
            },
            "tiedonantaja" : {
"description" : "",
"type" : "string"
            },
            "tilasto1" : {
"description" : "",
"type" : "string"
            },
            "tilasto2" : {
"description" : "",
"type" : "string"
            },
            "tilasto3" : {
"description" : "",
"type" : "string"
            },
            "tulot" : {
"description" : "",
"type" : "number"
            },
            "valitettu" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "valmistelija" : {
"description" : "",
"type" : "number"
            },
            "valmistelijaUser" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "valmisteluyksikko" : {
"description" : "",
"type" : "number"
            },
            "valmisteluyksikkoUnit" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "tila" : {
"description" : "",
"$ref" : "#/definitions/json_Tila"
            },
            "laatu" : {
"description" : "",
"$ref" : "#/definitions/json_Laatu"
            },
            "lasnaolot" : {
"description" : "",
"type" : "object"
            },
            "palvelukeskeytykset" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelukeskeytys"
}
            }
          },
      "description" : "Palvelup��t�s DTO."
    }
    ,
    "json_Palvelutapahtuma" : {
      "type" : "object",
      "title" : "Palvelutapahtuma",
          "properties" : {
            "tyonantaja" : {
"description" : "",
"type" : "number"
            },
            "kirjaaja" : {
"description" : "",
"type" : "number"
            },
            "kirjausyksikko" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "tyyppi" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtumaluokitus"
            },
            "oid" : {
"description" : "",
"type" : "string"
            },
            "kirjausyksikkoId" : {
"description" : "",
"type" : "number"
            },
            "id" : {
"description" : "",
"type" : "number"
            },
            "luovutusHaunPalvelutapahtuma" : {
"description" : "",
"type" : "boolean"
            },
            "palvelunantaja" : {
"description" : "",
"type" : "string"
            },
            "palveluntuottaja" : {
"description" : "",
"type" : "string"
            },
            "aktiivinen" : {
"description" : "",
"type" : "boolean"
            },
            "alkuaika" : {
"description" : "",
"type" : "number"
            },
            "rekisteri" : {
"description" : "",
"type" : "string"
            },
            "tapahtumalaji" : {
"description" : "",
"$ref" : "#/definitions/json_Tapahtumalaji"
            },
            "peruuntumisSyyKoodi" : {
"description" : "",
"type" : "string"
            },
            "omistaja" : {
"description" : "",
"type" : "number"
            },
            "kirjausAika" : {
"description" : "",
"type" : "number"
            },
            "loppuaika" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_PalvelutapahtumaList" : {
      "type" : "object",
      "title" : "PalvelutapahtumaList",
          "properties" : {
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "responseItemCount" : {
"description" : "",
"type" : "number"
            },
            "entries" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelutapahtuma"
}
            },
            "preferredPalvelutapahtumaReference" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            }
          },
      "description" : "This class is dto for transferring multiple different palvelutapahtumas in single query.\nThis has:<br>\n<ul>\n<li>list of palvelutapahtumas<\/li>\n<li>reference to preferred palvelutapahtuma from list (Care relation requires this)<\/li>\n<\/ul>"
    }
    ,
    "json_Palvelutapahtumaluokitus" : {
      "type" : "string",
      "title" : "Palvelutapahtumaluokitus",
          "enum" : [
            "VUODEOSASTOHOITOJAKSO",
            "KAYNTI_VASTAANOTOLLA",
            "AMMATTIHENKILON_KAYNTI_ASIKKAAN_LUONA",
            "ASIAKASKONTAKTI_ILMAN_KAYNTIA",
            "KONSULTAATIO",
            "ASIAKKAAN_ASIOIDEN_HOITO_ILMAN_ASIAKASKONTAKTIA",
            "MUU_LAITOSHOITOJAKSO",
            "SARJAHOITO"
          ],
      "description" : ""
    }
    ,
    "json_Patient" : {
      "type" : "object",
      "title" : "Patient",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_GenericOmistaja"
        },
        {
          "properties" : {
            "basicInfo" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "gender" : {
"description" : "",
"type" : "string"
            },
            "hoitosuhde" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "realmId" : {
"description" : "",
"type" : "string"
            },
            "domainId" : {
"description" : "",
"type" : "string"
            },
            "hoitojakso" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "uuid" : {
"description" : "",
"type" : "string"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            },
            "age" : {
"description" : "",
"type" : "number"
            },
            "riskitietoStatus" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            },
            "ssn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_PatientList" : {
      "type" : "object",
      "title" : "PatientList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OmistajaList"
        },
        {
          "properties" : {
            "patients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Patient"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_Permission" : {
      "type" : "object",
      "title" : "Permission",
          "properties" : {
            "permissions" : {
"description" : "",
"type" : "object"
            }
          },
      "description" : "The (initial) rights dto for permissions"
    }
    ,
    "json_PermissionDTO" : {
      "type" : "object",
      "title" : "PermissionDTO",
          "properties" : {
            "view" : {
"description" : "",
"type" : "boolean"
            },
            "change" : {
"description" : "",
"type" : "boolean"
            },
            "add" : {
"description" : "",
"type" : "boolean"
            },
            "data" : {
"description" : "",
"type" : "object"
            },
            "remove" : {
"description" : "",
"type" : "boolean"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "Generic permission dto for client usage\n\nExample:\n/hoitoohje/config\n{\npermissions: [\n{\nview: true,\nchange: false,\nadd: false,\nremove: false,\ntype: ExtendFormInfo\ndata: {\nformOwnerId: 0,\nfullFormTypeId: 73,\nformTypeInfo: {\nid: 73,\nname: \"\"\ndescription: \"\"\n},\nownerTypeInfo: {\nid: 0,\nname: \"\"\n},\nlomakeId: 168,\nname: \"\",\nhoitosuhdevaatimus: \"E\"\n}\n}\n}"
    }
    ,
    "json_PersonListByUnitAndForm" : {
      "type" : "object",
      "title" : "PersonListByUnitAndForm",
          "properties" : {
            "people" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "listId" : {
"description" : "",
"type" : "number"
            },
            "unitId" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_PlannerRightsAndSettings" : {
      "type" : "object",
      "title" : "PlannerRightsAndSettings",
          "properties" : {
            "skillsForm" : {
"description" : "Get Mediatri form information and current user rights for creating and editing skills.",
"$ref" : "#/definitions/json_FormRights"
            },
            "calendarDomains" : {
"description" : "Get the list of available calendar domains and their settings and current user rights.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CalendarDomainRightsAndSettings"
}
            }
          },
      "description" : "Data transfer object for MediPlan rights and settings information."
    }
    ,
    "json_PoistettuStatus" : {
      "type" : "string",
      "title" : "PoistettuStatus",
          "enum" : [
            "AKTIIVINEN",
            "POISTETTU",
            "SIIRRETTY"
          ],
      "description" : "Status possibilities for poistettu-field."
    }
    ,
    "json_Potilasryhma" : {
      "type" : "object",
      "title" : "Potilasryhma",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "otsikko" : {
"description" : "",
"type" : "string"
            },
            "koodi" : {
"description" : "",
"type" : "string"
            },
            "selite" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Dto for ryhma in Paikkakartta"
    }
    ,
    "json_PuutteellinenStatus" : {
      "type" : "string",
      "title" : "PuutteellinenStatus",
          "enum" : [
            "UNDEFINED",
            "PUUTTEELLINEN",
            "OK"
          ],
      "description" : "Status possibilities for puutteellinen-field."
    }
    ,
    "json_ReportingGroupDto" : {
      "type" : "object",
      "title" : "ReportingGroupDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "version" : {
"description" : "",
"type" : "number"
            },
            "color" : {
"description" : "Color in hex color format eg. \"#1f2f3f\" (regexp =  #([A-Fa-f0-9]{6}) )",
"type" : "string"
            },
            "meaning" : {
"description" : "Meaning can be AVAILABLE, BYSY_MANDAROTY or BUSY_OPTIONAL",
"$ref" : "#/definitions/json_Meaning"
            },
            "calendarModelFormId" : {
"description" : "Mediatri lomake id of Kalenterimallilomake used here",
"type" : "number"
            },
            "category" : {
"description" : "",
"$ref" : "#/definitions/json_EventCategory"
            },
            "eventModels" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EventModelDto"
}
            }
          }
        }
      ],
      "description" : "This DTO pass ReportingGroup (Raportointiryhm�) information"
    }
    ,
    "json_RequiredEquipmentTypeDto" : {
      "type" : "object",
      "title" : "RequiredEquipmentTypeDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "requirement" : {
"description" : "",
"$ref" : "#/definitions/json_EquipmentRequirement"
            },
            "amount" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_Riskitiedot" : {
      "type" : "object",
      "title" : "Riskitiedot",
          "properties" : {
            "riskitiedotList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Riskitieto"
}
            },
            "omistaja" : {
"description" : "",
"type" : "number"
            },
            "permissionDTO" : {
"description" : "",
"$ref" : "#/definitions/json_Permission"
            }
          },
      "description" : ""
    }
    ,
    "json_Riskitieto" : {
      "type" : "object",
      "title" : "Riskitieto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "osa" : {
"description" : "",
"type" : "number"
            },
            "aste" : {
"description" : "",
"type" : "string"
            },
            "tyyppi" : {
"description" : "",
"type" : "string"
            },
            "koodi" : {
"description" : "",
"type" : "string"
            },
            "selite" : {
"description" : "",
"type" : "string"
            },
            "koodisto" : {
"description" : "",
"type" : "string"
            },
            "versio" : {
"description" : "",
"type" : "string"
            },
            "lisakoodi" : {
"description" : "",
"type" : "string"
            },
            "lisaselite" : {
"description" : "",
"type" : "string"
            },
            "lisakoodisto" : {
"description" : "",
"type" : "string"
            },
            "lisaversio" : {
"description" : "",
"type" : "string"
            },
            "kuvaus" : {
"description" : "",
"type" : "string"
            },
            "huomiointi" : {
"description" : "",
"type" : "string"
            },
            "pysyvyys" : {
"description" : "",
"type" : "string"
            },
            "varmuusaste" : {
"description" : "",
"type" : "string"
            },
            "vakavuus" : {
"description" : "",
"type" : "string"
            },
            "lomakelinkki" : {
"description" : "",
"type" : "number"
            },
            "osalinkki" : {
"description" : "",
"type" : "number"
            },
            "lahdetyyppi" : {
"description" : "",
"type" : "string"
            },
            "lahde" : {
"description" : "",
"type" : "number"
            },
            "alkaa" : {
"description" : "",
"type" : "number"
            },
            "aloittaja" : {
"description" : "",
"type" : "number"
            },
            "aloitusyksikko" : {
"description" : "",
"type" : "number"
            },
            "lopetusyksikko" : {
"description" : "",
"type" : "number"
            },
            "loppuu" : {
"description" : "",
"type" : "number"
            },
            "lopettaja" : {
"description" : "",
"type" : "number"
            },
            "poistettu" : {
"description" : "",
"type" : "string"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            },
            "paattymissyy" : {
"description" : "",
"type" : "string"
            },
            "paattymistarkenne" : {
"description" : "",
"type" : "string"
            },
            "viivastys" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "kestoarvio" : {
"description" : "",
"$ref" : "#/definitions/json_Date"
            },
            "oid" : {
"description" : "",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "",
"type" : "number"
            },
            "vanha" : {
"description" : "",
"type" : "number"
            },
            "kirjausyksikko" : {
"description" : "",
"type" : "number"
            },
            "lomake" : {
"description" : "",
"type" : "number"
            },
            "tyyppiString" : {
"description" : "",
"type" : "string"
            },
            "kirjaajaNimi" : {
"description" : "",
"type" : "string"
            },
            "aloitusyksikkoNimi" : {
"description" : "",
"type" : "string"
            },
            "aloittajaNimi" : {
"description" : "",
"type" : "string"
            },
            "kirjausyksikkoNimi" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for Riskitieto\n\nA class to present RISKI table in Medisairaala.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_RiskitietoStatus" : {
      "type" : "string",
      "title" : "RiskitietoStatus",
          "enum" : [
            "STATUS_EI_TIEDOSSA",
            "EI_RISKEJA",
            "HUOMIOITAVIA_RISKEJA",
            "KRIITTISIA_RISKEJA",
            "KRIITTISIA_JA_HUOMIOITAVIA_RISKEJA"
          ],
      "description" : ""
    }
    ,
    "json_RoleDTO" : {
      "type" : "object",
      "title" : "RoleDTO",
          "properties" : {
            "role" : {
"description" : "",
"type" : "number"
            },
            "unit" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : "A class for saving role+unit information"
    }
    ,
    "json_RoomDto" : {
      "type" : "object",
      "title" : "RoomDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "startTime" : {
"description" : "Get the startTime information for the room",
"$ref" : "#/definitions/json_Time"
            },
            "endTime" : {
"description" : "Get the endTime information for the room",
"$ref" : "#/definitions/json_Time"
            },
            "roomGroupId" : {
"description" : "Get the roomGroup id information for the room",
"type" : "number"
            },
            "capacity" : {
"description" : "Get the capacity information for the room",
"type" : "number"
            },
            "waitingRoom" : {
"description" : "Get the waitingRoom information for the room",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Data transfer object representing room"
    }
    ,
    "json_RoomGroupDto" : {
      "type" : "object",
      "title" : "RoomGroupDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "$ref" : "#/definitions/json_KuhaDtoNameBase"
        },
        {
          "properties" : {
            "roomDtos" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoomDto"
}
            }
          }
        }
      ],
      "description" : "Data transfer object representing room group"
    }
    ,
    "json_SeurantaConfig" : {
      "type" : "object",
      "title" : "SeurantaConfig",
          "properties" : {
            "configs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SeurantaFormConfig"
}
            },
            "writeCount" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_SeurantaEntry" : {
      "type" : "object",
      "title" : "SeurantaEntry",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "kirjaaja" : {
"description" : "",
"type" : "number"
            },
            "unitId" : {
"description" : "",
"type" : "number"
            },
            "patientId" : {
"description" : "",
"type" : "number"
            },
            "titles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EditTitleValue"
}
            },
            "formId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO edit model for seuranta."
    }
    ,
    "json_SeurantaFormConfig" : {
      "type" : "object",
      "title" : "SeurantaFormConfig",
          "properties" : {
            "titles" : {
"description" : "",
"type" : "object"
            },
            "permission" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionDTO"
            }
          },
      "description" : "Form config for one seuranta lomake."
    }
    ,
    "json_SkillDto" : {
      "type" : "object",
      "title" : "SkillDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "abbr" : {
"description" : "",
"type" : "string"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "changeable" : {
"description" : "This property is used in TapahtumaPohja.",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Data transfer object for workers skill data"
    }
    ,
    "json_SkillsInfo" : {
      "type" : "object",
      "title" : "SkillsInfo",
          "properties" : {
            "dataLoaded" : {
"description" : "Get data load status for basic information.\nIf <code>false<\/code> then #getHref() will return URL to fetch the missing data.",
"type" : "boolean"
            },
            "href" : {
"description" : "Gets lazy loading URL for missing skills.",
"type" : "string"
            },
            "skills" : {
"description" : "Gets all skills.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            }
          },
      "description" : "DTO for gathering multiple skills into one DTO that can be lazy loadable.\nBound to SkillDto class."
    }
    ,
    "json_TagsForCourseDto" : {
      "type" : "object",
      "title" : "TagsForCourseDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "removed" : {
"description" : "",
"type" : "boolean"
            },
            "courseTagId" : {
"description" : "",
"type" : "number"
            },
            "tagId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_TagsForPeriodDto" : {
      "type" : "object",
      "title" : "TagsForPeriodDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "removed" : {
"description" : "Tags can be removed from period by putting this true in PUT -command ( for course period)",
"type" : "boolean"
            },
            "periodTagId" : {
"description" : "",
"type" : "number"
            },
            "tagId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO representing one period tag"
    }
    ,
    "json_TapahtumaLuonne" : {
      "type" : "string",
      "title" : "TapahtumaLuonne",
          "enum" : [
            "ASSIGNED",
            "TEMPLATE",
            "COMMON",
            "TRANSITION"
          ],
      "description" : ""
    }
    ,
    "json_Tapahtumalaji" : {
      "type" : "string",
      "title" : "Tapahtumalaji",
          "enum" : [
            "JONO",
            "PALVELUJEN_OSTO",
            "KOTIHOITO",
            "PALVELUASUMINEN",
            "LAHETE_JA_HOITOPALAUTE",
            "YHTEYDENOTTO_HOIDON_TARPEEN_ARVIOIMISEKSI",
            "LAAKEMAARAYKSEN_UUSITAMISPYYNTO",
            "ERITYINEN_SYY",
            "AJANVARAUS",
            "AVOHOITO",
            "OSASTOHOITO",
            "KONSULTAATIO",
            "TOIMENPIDE",
            "ANESTESIA",
            "LABORATORIO",
            "RADIOLOGIA"
          ],
      "description" : ""
    }
    ,
    "json_Tila" : {
      "type" : "string",
      "title" : "Tila",
          "enum" : [
            "KESKEN",
            "VALMIS",
            "MITATOITY"
          ],
      "description" : "Tila of palvelupaatos."
    }
    ,
    "json_Time" : {
      "type" : "object",
      "title" : "Time",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "json_TimeInterval" : {
      "type" : "object",
      "title" : "TimeInterval",
          "properties" : {
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "endTime" : {
"description" : "",
"type" : "number"
            }
          },
      "description" : ""
    }
    ,
    "json_TimeRuleDto" : {
      "type" : "object",
      "title" : "TimeRuleDto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_KuhaDtoBase"
        },
        {
          "properties" : {
            "start" : {
"description" : "Get the start time of the rule in Unix time",
"type" : "number"
            },
            "durationInMinutes" : {
"description" : "Get the duration of the rule in minutes",
"type" : "number"
            },
            "recurrenceEnd" : {
"description" : "Get the end time of a recurring rule in Unix time",
"type" : "number"
            },
            "recurrenceCode" : {
"description" : "Get the recurrence rule. The string is in a HL7 specified format.\nFor example: Q6H indicates that the event is performed at least once every 6 hours around the clock.\nQJ1 indicates that the event is performed at least every week on Mondays.\nQAM~QPM indicates that the event is performed at least once every morning and every evening.\nQJ1~QJ3~QJ5 indicates that the event is performed at least every week on Mondays, Wednesdays, and Fridays.\nC indicates that the event is performed continuously, 7 days per week.",
"type" : "string"
            },
            "calendarContext" : {
"description" : "",
"$ref" : "#/definitions/json_CalendarContextDto"
            },
            "calendarEventIds" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            },
            "eventModelId" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "Data transfer object for defining working hour rules."
    }
    ,
    "json_Tutkimuspyynnot" : {
      "type" : "object",
      "title" : "Tutkimuspyynnot",
          "properties" : {
            "patientId" : {
"description" : "",
"type" : "number"
            },
            "tutkimuspyyntoList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Tutkimuspyynto"
}
            },
            "permissionDTO" : {
"description" : "",
"$ref" : "#/definitions/json_Permission"
            }
          },
      "description" : ""
    }
    ,
    "json_Tutkimuspyynto" : {
      "type" : "object",
      "title" : "Tutkimuspyynto",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "tutkimus" : {
"description" : "Returns the name of the Tutkimus",
"type" : "string"
            },
            "tutkimuspyyntoTiedotList" : {
"description" : "Returns a list of Tutkimus details under the same tutkimus name",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TutkimuspyyntoTiedot"
}
            },
            "kategoria" : {
"description" : "Returns the category of the tutkimus. Category could be\n\"tilattu\", \"kuittaamaton\" or \"tulos\"",
"type" : "string"
            },
            "latestTime" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for LabExamination\n\nA class to present TUTKIMUSPYYNTO table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_TutkimuspyyntoHerkkyys" : {
      "type" : "object",
      "title" : "TutkimuspyyntoHerkkyys",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "rivi" : {
"description" : "",
"type" : "number"
            },
            "antibiootti" : {
"description" : "",
"type" : "string"
            },
            "kiekkoherkkyys" : {
"description" : "",
"type" : "string"
            },
            "micherkkyys" : {
"description" : "",
"type" : "string"
            },
            "lyhenne" : {
"description" : "",
"type" : "string"
            },
            "numero" : {
"description" : "",
"type" : "string"
            },
            "ryhma" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for TutkimuspyyntoHerkkyys\n\nA class to present TUTKIMUSPYYNTOHERKKYYS table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_TutkimuspyyntoMikrobi" : {
      "type" : "object",
      "title" : "TutkimuspyyntoMikrobi",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "rivi" : {
"description" : "",
"type" : "number"
            },
            "mikrobi" : {
"description" : "",
"type" : "string"
            },
            "tutkimustyyppi" : {
"description" : "",
"type" : "string"
            },
            "maara" : {
"description" : "",
"type" : "string"
            },
            "numero" : {
"description" : "",
"type" : "string"
            },
            "kommentti" : {
"description" : "",
"type" : "string"
            },
            "poistettu" : {
"description" : "",
"type" : "object"
            },
            "muutosaika" : {
"description" : "",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "",
"type" : "number"
            },
            "herkkyydet" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TutkimuspyyntoHerkkyys"
}
            }
          }
        }
      ],
      "description" : "DTO for Lab Examination Microbe\n\nA class to present TUTKIMUSPYYNTOMIKROBI table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_TutkimuspyyntoTiedot" : {
      "type" : "object",
      "title" : "TutkimuspyyntoTiedot",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "properties" : {
            "pyynto" : {
"description" : "Returns the pyynto id",
"type" : "number"
            },
            "rivi" : {
"description" : "Returns the row number",
"type" : "number"
            },
            "tutkimus" : {
"description" : "Returns the Tutkimus name",
"type" : "string"
            },
            "versio" : {
"description" : "Returns the version",
"type" : "string"
            },
            "hajautettu" : {
"description" : "Returns the char value for Hajautettu",
"type" : "string"
            },
            "hoitojakso" : {
"description" : "Returns the Hoitojakso",
"type" : "number"
            },
            "huomautuksia" : {
"description" : "Returns the notifications",
"type" : "string"
            },
            "kontrolloitava" : {
"description" : "Returns the possible control date",
"$ref" : "#/definitions/json_Date"
            },
            "korvausluokka" : {
"description" : "Returns the korvausluokka",
"type" : "string"
            },
            "kunta" : {
"description" : "Returns the county council",
"type" : "number"
            },
            "kustannuslinkki" : {
"description" : "Returns the Kustannuslinkki",
"type" : "number"
            },
            "lisatietoja" : {
"description" : "Return the info about if there is some extra information",
"type" : "string"
            },
            "lomakelinkki" : {
"description" : "Return the Lomakelinkki",
"type" : "number"
            },
            "maksaja" : {
"description" : "Return the payer",
"type" : "number"
            },
            "mikrobitietoja" : {
"description" : "Return the info about if there is Mikrobitietoja available",
"type" : "string"
            },
            "muutosaika" : {
"description" : "Return the time of change",
"type" : "number"
            },
            "muutospaikka" : {
"description" : "Return the place of change",
"type" : "number"
            },
            "nayte" : {
"description" : "Return the sample",
"type" : "number"
            },
            "naytetietoja" : {
"description" : "Return the info about if there is sample information",
"type" : "string"
            },
            "numerotulos" : {
"description" : "Return the result in numeric format",
"type" : "number"
            },
            "numeroyksikko" : {
"description" : "Return the unit of the result",
"type" : "string"
            },
            "osalinkki" : {
"description" : "Return the Osalinkki",
"type" : "number"
            },
            "osasto" : {
"description" : "Return the department",
"type" : "number"
            },
            "ottoaika" : {
"description" : "Return the time when the lab examination is done",
"type" : "number"
            },
            "paketti" : {
"description" : "Return the package",
"type" : "string"
            },
            "piiri" : {
"description" : "Return the V�est�vastuupiiri",
"type" : "number"
            },
            "poistettu" : {
"description" : "Return the info about if the result is removed",
"type" : "string"
            },
            "pyydetty" : {
"description" : "Return the time when the lab examination is ordered",
"type" : "number"
            },
            "sanallinenvastaus" : {
"description" : "Return the verbal result",
"type" : "string"
            },
            "sijaintiosasto" : {
"description" : "Return the location (department)",
"type" : "string"
            },
            "sijaintipaikka" : {
"description" : "Return the location (place)",
"type" : "string"
            },
            "sisainenMaksaja" : {
"description" : "Return the internal payer",
"type" : "string"
            },
            "suoritelinkki" : {
"description" : "Return the Suoritelinkki",
"type" : "number"
            },
            "tehty" : {
"description" : "Return the time when lab examination is done",
"type" : "number"
            },
            "tekopaikka" : {
"description" : "Return the place where lab examination is done",
"type" : "number"
            },
            "tekstitulos" : {
"description" : "Return the result in textual format",
"type" : "string"
            },
            "tekstiviesti" : {
"description" : "Return the SMS",
"type" : "number"
            },
            "tila" : {
"description" : "Return the state",
"type" : "object"
            },
            "tilaaja" : {
"description" : "Return the orderer",
"type" : "number"
            },
            "tilaajaNimi" : {
"description" : "Return the name of the orderer",
"type" : "string"
            },
            "tilaajayksikko" : {
"description" : "Return the unit of the orderer",
"type" : "number"
            },
            "tilaustunnus" : {
"description" : "Return the identifier of the order",
"type" : "string"
            },
            "toistoloppuu" : {
"description" : "Return the date when the repetition ends",
"$ref" : "#/definitions/json_Date"
            },
            "toistovali" : {
"description" : "Return the interval of the repetition",
"type" : "number"
            },
            "tulkinta" : {
"description" : "Return the interpretation",
"type" : "string"
            },
            "tuottaja" : {
"description" : "Return the producer",
"type" : "number"
            },
            "tyonantaja" : {
"description" : "Return the employer",
"type" : "number"
            },
            "vastaustietoja" : {
"description" : "Return the info about if there is Vastaustietoja available",
"type" : "string"
            },
            "viitearvot" : {
"description" : "Return the Viitearvot, which contains min and max values for the\nresult. Result is normal, if the value is between the min and max values.",
"type" : "string"
            },
            "kirjaaja" : {
"description" : "Return the recorder of the result",
"type" : "number"
            },
            "tilaKoodi" : {
"description" : "",
"type" : "string"
            },
            "poikkeava" : {
"description" : "",
"type" : "number"
            },
            "mikrobit" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TutkimuspyyntoMikrobi"
}
            }
          }
        }
      ],
      "description" : "DTO for Lab Examination Details\n\nA class to present TUTKIMUSPYYNTO table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "json_Unit" : {
      "type" : "object",
      "title" : "Unit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_GenericOmistaja"
        },
        {
          "properties" : {
            "abbreviation" : {
"description" : "",
"type" : "string"
            },
            "basicInfo" : {
"description" : "",
"$ref" : "#/definitions/json_LazyLoadedDto"
            }
          }
        }
      ],
      "description" : "DTO for Unit (=toimintayksikk�) that combines information both from OMISTAJA and PERUSTIETO tables related\nto units (palveluyksikk�) where users (k�ytt�j�) signs in and works for."
    }
    ,
    "json_User" : {
      "type" : "object",
      "title" : "User",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_GenericOmistaja"
        },
        {
          "properties" : {
            "skills" : {
"description" : "",
"$ref" : "#/definitions/json_SkillsInfo"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            },
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "basicInfo" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "endTime" : {
"description" : "",
"type" : "number"
            },
            "userName" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_UserGroup" : {
      "type" : "object",
      "title" : "UserGroup",
          "properties" : {
            "groupdId" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          },
      "description" : "DTO to present available user groupd in the system"
    }
    ,
    "json_UserList" : {
      "type" : "object",
      "title" : "UserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OmistajaList"
        },
        {
          "properties" : {
            "users" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_User"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "json_ViewTitleValue" : {
      "type" : "object",
      "title" : "ViewTitleValue",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractDTO"
        },
        {
          "$ref" : "#/definitions/json_BaseTitleValue"
        },
        {
          "properties" : {
            "presentation" : {
"description" : "Create Json presentation property for the title value",
"type" : "string"
            },
            "empty" : {
"description" : "Function to check if title value is empty.\nDefault implementation assume that value always contains some data.\nDerived classes can override this method.",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Mediatri titles can have special format of the value data stored in DB.\nServer creates the separate object to present title value which is returned as Json model to the client for viewing.\nAll title value should have presentation property.\nBaseTitleValue class contains default presentation implementation for the all titles.\nAll title value classes should be derived from BaseTitleValue and reimplement\nbuildPresentation() method if it is necessary some special text presentation of the value.\n\nMediatri logic requires get vapaa or vakio fields from title in different use cases.\nCoreApi also need this functionality. Therefore two methods added:\n- getVapaa()\n- getVakio()\nBy default these methods return empty String.\nDerived title value classes can redefined these emethods.\nBy default these values are included into client Json model."
    }
    ,
    "json_WorkerAvailabilityDto" : {
      "type" : "object",
      "title" : "WorkerAvailabilityDto",
          "properties" : {
            "worker" : {
"description" : "Get general user information for the worker",
"$ref" : "#/definitions/json_User"
            },
            "availability" : {
"description" : "Get availability information for the worker",
"$ref" : "#/definitions/json_AvailabilityDto"
            }
          },
      "description" : ""
    }
    ,
    "xml_ns0_abstractDTO" : {
      "type" : "object",
      "title" : "abstractDTO",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_laakitysAnto" : {
      "type" : "object",
      "title" : "laakitysAnto",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "annettavaMaara" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the base amount that is given if swiped. Also the lower border of the amount.",
"type" : "number"
            },
            "annettavaMaksimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the uuper border of the amount.",
"type" : "number"
            },
            "annettavaYksikko" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the base unit that is described by laakityshistoria.",
"type" : "string"
            },
            "antaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the id of the medication giver",
"type" : "number"
            },
            "antajaName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the name of the medication giver",
"type" : "string"
            },
            "huomautuksia" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the observetion comments related to the medication giving",
"type" : "string"
            },
            "kirjaaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the id of the actual person that fed this info to the DB/system",
"type" : "number"
            },
            "kirjaajaName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the name of the actual person that fed this info to the DB/system",
"type" : "string"
            },
            "laake" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the laake VNR. VNR is a code that is used to identify the medication. @see http://www.laaketietokeskus.fi/vnr",
"type" : "string"
            },
            "maara" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the medication amount",
"type" : "number"
            },
            "omistaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the owner ie. patients mediatri id.",
"type" : "number"
            },
            "osa" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Retuns the part number that is the id of the medication together with alku and omistaja",
"type" : "number"
            },
            "poistettu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the code of the medication time removal. 'E' - not removed, 'K' = removed",
"type" : "number"
            },
            "suunniteltuAika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the planned time for medication. Tells which time the medication should be given",
"type" : "string"
            },
            "toteutunutAika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the actual time of medication. Mapped from PK id ALKU",
"type" : "string"
            },
            "toteutunutAikaOriginal" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Original time of medication. mapped from PK id ALKU. This PK is modified so to find the modifiable row the old row must be also given.",
"type" : "string"
            },
            "tyyppi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the type of LaakitysAnto object, 1 = planned and given, 2 = planned but not yet given, 3 = extra",
"type" : "number"
            },
            "yksikko" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the used unit. ml, l, etc.",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for LaakitysAnto.\n\n* A class to present LAAKITYS_ANTO table in medication functionality.\nUsed to carry the data from database to the client side.\n\n<table style=\"border: 1px solid black;\">\n<tr><th>property<\/th><th>only for frontend<\/th><th>obligatory from api<\/th><th>editable<\/th><th>must be same as laakityshistorias<\/th><\/tr>\n<tr><td>antaja<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>huomautuksia<\/td><td>no<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>kello<\/td><td>no<\/td><td>yes (in planned)<\/td><td>yes<\/td><td>yes (all in one field)<\/td><\/tr>\n<tr><td>kirjaaja<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>laake<\/td><td>yes<\/td><td>no (added by api)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>maara<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>muutosAika<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>omistaja<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>osa<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>poistettu<\/td><td>no<\/td><td>no (added by api)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAika<\/td><td>no<\/td><td>yes<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAikaOriginal<\/td><td>no<\/td><td>yes (only for editing)<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>toteutunutAikaLoppu<\/td><td>no<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><\/tr>\n<tr><td>tyyppi<\/td><td>no<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>yksikko<\/td><td>no<\/td><td>yes (doublechecked)<\/td><td>no<\/td><td>yes<\/td><\/tr>\n<tr><td>kirjaajaName<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>antajaName<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaMaara<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaYksikko<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<tr><td>annettavaMaksimi<\/td><td>yes<\/td><td>no<\/td><td>no<\/td><td>no<\/td><\/tr>\n<\/table>"
    }
    ,
    "xml_ns0_tutkimuspyynto" : {
      "type" : "object",
      "title" : "tutkimuspyynto",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "kategoria" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the category of the tutkimus. Category could be\n\"tilattu\", \"kuittaamaton\" or \"tulos\"",
"type" : "string"
            },
            "latestTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "tutkimus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the name of the Tutkimus",
"type" : "string"
            },
            "tutkimuspyyntoTiedotList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns a list of Tutkimus details under the same tutkimus name",
"$ref" : "#/definitions/xml_ns0_tutkimuspyyntoTiedot"
            }
          }
        }
      ],
      "description" : "DTO for LabExamination\n\nA class to present TUTKIMUSPYYNTO table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "xml_ns0_tutkimuspyyntoHerkkyys" : {
      "type" : "object",
      "title" : "tutkimuspyyntoHerkkyys",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "antibiootti" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "kiekkoherkkyys" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "lyhenne" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "micherkkyys" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "numero" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "rivi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "ryhma" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for TutkimuspyyntoHerkkyys\n\nA class to present TUTKIMUSPYYNTOHERKKYYS table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "xml_ns0_tutkimuspyyntoMikrobi" : {
      "type" : "object",
      "title" : "tutkimuspyyntoMikrobi",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "herkkyydet" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_tutkimuspyyntoHerkkyys"
            },
            "kommentti" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "maara" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "mikrobi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "muutosaika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "muutospaikka" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "numero" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "poistettu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "rivi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "tutkimustyyppi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "DTO for Lab Examination Microbe\n\nA class to present TUTKIMUSPYYNTOMIKROBI table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "xml_ns0_tutkimuspyyntoTiedot" : {
      "type" : "object",
      "title" : "tutkimuspyyntoTiedot",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "hajautettu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the char value for Hajautettu",
"type" : "number"
            },
            "hoitojakso" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the Hoitojakso",
"type" : "number"
            },
            "huomautuksia" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the notifications",
"type" : "string"
            },
            "kirjaaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the recorder of the result",
"type" : "number"
            },
            "kontrolloitava" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the possible control date",
"$ref" : "#/definitions/xml_ns0_date"
            },
            "korvausluokka" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the korvausluokka",
"type" : "number"
            },
            "kunta" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the county council",
"type" : "number"
            },
            "kustannuslinkki" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the Kustannuslinkki",
"type" : "number"
            },
            "lisatietoja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the info about if there is some extra information",
"type" : "number"
            },
            "lomakelinkki" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the Lomakelinkki",
"type" : "number"
            },
            "maksaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the payer",
"type" : "number"
            },
            "mikrobit" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_tutkimuspyyntoMikrobi"
            },
            "mikrobitietoja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the info about if there is Mikrobitietoja available",
"type" : "number"
            },
            "muutosaika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the time of change",
"type" : "string"
            },
            "muutospaikka" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the place of change",
"type" : "number"
            },
            "nayte" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the sample",
"type" : "number"
            },
            "naytetietoja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the info about if there is sample information",
"type" : "number"
            },
            "numerotulos" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the result in numeric format",
"type" : "number"
            },
            "numeroyksikko" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the unit of the result",
"type" : "string"
            },
            "osalinkki" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the Osalinkki",
"type" : "number"
            },
            "osasto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the department",
"type" : "number"
            },
            "ottoaika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the time when the lab examination is done",
"type" : "string"
            },
            "paketti" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the package",
"type" : "string"
            },
            "piiri" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the V�est�vastuupiiri",
"type" : "number"
            },
            "poikkeava" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "poistettu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the info about if the result is removed",
"type" : "string"
            },
            "pyydetty" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the time when the lab examination is ordered",
"type" : "string"
            },
            "pyynto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the pyynto id",
"type" : "number"
            },
            "rivi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the row number",
"type" : "number"
            },
            "sanallinenvastaus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the verbal result",
"type" : "string"
            },
            "sijaintiosasto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the location (department)",
"type" : "string"
            },
            "sijaintipaikka" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the location (place)",
"type" : "string"
            },
            "sisainenMaksaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the internal payer",
"type" : "string"
            },
            "suoritelinkki" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the Suoritelinkki",
"type" : "number"
            },
            "tehty" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the time when lab examination is done",
"type" : "string"
            },
            "tekopaikka" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the place where lab examination is done",
"type" : "number"
            },
            "tekstitulos" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the result in textual format",
"type" : "string"
            },
            "tekstiviesti" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the SMS",
"type" : "number"
            },
            "tila" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the state",
"type" : "number"
            },
            "tilaKoodi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "tilaaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the orderer",
"type" : "number"
            },
            "tilaajaNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the name of the orderer",
"type" : "string"
            },
            "tilaajayksikko" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the unit of the orderer",
"type" : "number"
            },
            "tilaustunnus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the identifier of the order",
"type" : "string"
            },
            "toistoloppuu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the date when the repetition ends",
"$ref" : "#/definitions/xml_ns0_date"
            },
            "toistovali" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the interval of the repetition",
"type" : "number"
            },
            "tulkinta" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the interpretation",
"type" : "string"
            },
            "tuottaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the producer",
"type" : "number"
            },
            "tutkimus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the Tutkimus name",
"type" : "string"
            },
            "tyonantaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the employer",
"type" : "number"
            },
            "vastaustietoja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the info about if there is Vastaustietoja available",
"type" : "number"
            },
            "versio" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the version",
"type" : "string"
            },
            "viitearvot" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Return the Viitearvot, which contains min and max values for the\nresult. Result is normal, if the value is between the min and max values.",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for Lab Examination Details\n\nA class to present TUTKIMUSPYYNTO table in laboratory examination functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "xml_ns0_hoito" : {
      "type" : "object",
      "title" : "hoito",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractDTO"
        },
        {
          "properties" : {
            "alkaa" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the alkaa date",
"$ref" : "#/definitions/xml_ns0_date"
            },
            "huomautuksia" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the notifications (huomautuksia)",
"type" : "string"
            },
            "kellonajat" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the times as a string",
"type" : "string"
            },
            "kerta" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the type of Hoito (K = kertaluonteinen, E = pysyv�)",
"type" : "number"
            },
            "kirjaaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the recorder (kirjaaja)",
"type" : "number"
            },
            "kirjaajaNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lomake" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the used form (lomake)",
"type" : "number"
            },
            "lomakeNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lopetettu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the time of ending (lopetettu)",
"type" : "string"
            },
            "lopettaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the ender (lopettaja)",
"type" : "number"
            },
            "lopettajaNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "loppuu" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the loppuu date",
"$ref" : "#/definitions/xml_ns0_date"
            },
            "maaraaja" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the maaraaja id",
"type" : "number"
            },
            "maaraajaNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "muutosaika" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the time of change",
"type" : "string"
            },
            "otsikko" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the header (otsikko)",
"type" : "string"
            },
            "rivi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the row number (rivi)",
"type" : "number"
            },
            "tehty" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the time when Hoito is done",
"type" : "string"
            },
            "tekija" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the tekija id",
"type" : "number"
            },
            "tekijaNimi" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "vakio" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the constant string (vakio)",
"type" : "string"
            },
            "vapaa" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the free string (vapaa)",
"type" : "string"
            }
          }
        }
      ],
      "description" : "DTO for Hoito\n\nA class to present HOITO table in hoito-ohjeet ja -m��r�ykset functionality.\nUsed to carry the data from database to the client side."
    }
    ,
    "xml_ns0_date" : {
      "type" : "object",
      "title" : "date",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/admin/clearcache" : {
      "get" : {
        "tags" : [ "AdminResource" ],
        "description" : "Api for clearing cache. This ensures that all configuration is refetched from mediatri.",
        "operationId" : "resource_AdminResource_clearCache_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/contextLogin" : {
      "post" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "Login with context. Currently this will join context once with given sessionKey and fetch all keys.\nContext login will fetch User.Co.[mediconsult.fi]UserId that is mediatri omistajaId. It can be professional or customer too. Customers have very limited priviledges.\nIf context doesn't contain value in User.Co.[mediconsult.fi]UserId then User.Id.Logon value is used to search for username from mediatri. User.Id.Logon login is limited only to professionals logging in.   *",
        "operationId" : "resource_AuthenticationResource_loginWithContext_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "domain",
            "in" : "formData",
            "type" : "string",
            "description" : "Mediatri-domainId"
          },
          {
            "name" : "sessionKey",
            "in" : "formData",
            "type" : "string",
            "description" : "Context session-key to be used in join"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/identity" : {
      "get" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "You can verify current session information using this API.",
        "operationId" : "resource_AuthenticationResource_getCurretUser_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/login" : {
      "post" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "Login with username and password. This returns with http-200 even authentication fails. Response has \"success\" true/false if authentication was successful.",
        "operationId" : "resource_AuthenticationResource_loginWithForm_POST",
        "consumes" : [ "application/x-authc-username-password+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LoginCredentials"
            },
            "description" : "LoginCredentials with userId and Password."
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Unexpected critical error."
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "post" : {
        "deprecated":true,
        "tags" : [ "AuthenticationResource" ],
        "description" : "",
        "operationId" : "resource_AuthenticationResource_loginWithContextOldPath_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "domain",
            "in" : "formData",
            "type" : "string",
            "description" : "domain"
          },
          {
            "name" : "sessionKey",
            "in" : "formData",
            "type" : "string",
            "description" : "key"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "API for authenticating to Core.\nCan be used in browser http://localhost:8080/CoreWEB/rest/authentication/login?username=MGR&password=&mediatritunnus= ",
        "operationId" : "resource_AuthenticationResource_loginGet_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "mediatritunnus",
            "in" : "query",
            "type" : "string",
            "description" : "Mediatri-domainID"
          },
          {
            "name" : "password",
            "in" : "query",
            "type" : "string",
            "description" : "password for user. Password can be reset in mediatri"
          },
          {
            "name" : "role",
            "in" : "query",
            "type" : "string",
            "description" : "Must have optionalUnitId-parameter too if role is given. If role+unit doesnt exist, bad request is thrown and user is logged out."
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "string",
            "description" : "UnitId can be given directly as parameter-&gt; session will use this unit and no 2-nd login step is required."
          },
          {
            "name" : "username",
            "in" : "query",
            "type" : "string",
            "description" : "Username eg \"MGR\""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/logout" : {
      "post" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "A simple logout method using POST",
        "operationId" : "resource_AuthenticationResource_logoutPost_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "A simple logout method using GET",
        "operationId" : "resource_AuthenticationResource_logoutGet_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/ping" : {
      "get" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "Client Side ping for server every 30 sec on offline.",
        "operationId" : "resource_AuthenticationResource_ping_GET",
        "produces" : [ "text/plain" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/plannerRights" : {
      "get" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "Get information about Mediplan related rights and settings that are configured in Mediatri.",
        "operationId" : "resource_AuthenticationResource_getPlannerRightsAndSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PlannerRightsAndSettings"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/authentication/role" : {
      "post" : {
        "tags" : [ "AuthenticationResource" ],
        "description" : "Set the active role",
        "operationId" : "resource_AuthenticationResource_setRole_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RoleDTO"
            },
            "description" : "RoleDTO which contains info about current selected role"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "If given role+unit was invalid for current user"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CoreAuthenticationDTO"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/log/error" : {
      "post" : {
        "tags" : [ "ClientLogResource" ],
        "description" : "Write given error to log",
        "operationId" : "resource_ClientLogResource_error_POST",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : "message to be logged as error"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/log/info" : {
      "post" : {
        "tags" : [ "ClientLogResource" ],
        "description" : "Write given info text to log",
        "operationId" : "resource_ClientLogResource_info_POST",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : "message to be logged as info"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/ext/kurssit/list" : {
      "get" : {
        "tags" : [ "ExtKurssiResource" ],
        "description" : "",
        "operationId" : "resource_ExtKurssiResource_getCourses_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CourseCollectionDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/measurements/config" : {
      "get" : {
        "tags" : [ "FysiologisetMittauksetResource" ],
        "description" : "",
        "operationId" : "resource_FysiologisetMittauksetResource_getMedicalComponentConfig_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_MittausComponentConfig"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_MittausComponentConfig"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_MittausComponentConfig"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_MittausComponentConfig"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/measurements/{id}" : {
      "get" : {
        "tags" : [ "FysiologisetMittauksetResource" ],
        "description" : "Fetch the list of measurements. Service returns the list of measurements for the last month from the current day.\nThe measurements are grouped by title first. Titles are returned in alphabetical order.",
        "operationId" : "resource_FysiologisetMittauksetResource_getMittaukset_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient omistajaId for whom to fetch the data"
          },
          {
            "name" : "count",
            "in" : "query",
            "type" : "string",
            "description" : "Set the limit to the result set. Default is 5 if no value is given. It means that service returns 5 latest measurements for each title."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed"
          },
          "412" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Precondition failed: Authenticated user must pick proper encounter event before accessing this API"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoidot/{id}" : {
      "get" : {
        "tags" : [ "HoitoResource" ],
        "description" : "Fetch Hoidot with patient id",
        "operationId" : "resource_HoitoResource_getHoidot_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoidot"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoidot/{id}/done" : {
      "put" : {
        "tags" : [ "HoitoResource" ],
        "description" : "Mark Hoito entity as done",
        "operationId" : "resource_HoitoResource_markHoitoAsDone_PUT",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoito"
            },
            "description" : "HoitoDTO"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoidot/{id}/end" : {
      "put" : {
        "tags" : [ "HoitoResource" ],
        "description" : "Mark Hoito entity as ended",
        "operationId" : "resource_HoitoResource_markHoitoAsEnded_PUT",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoito"
            },
            "description" : "HoitoDTO"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/asetukset" : {
      "get" : {
        "tags" : [ "HoitotyoResource" ],
        "description" : "",
        "operationId" : "resource_HoitotyoResource_getHoitotyoasetukset_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyoasetukset"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{id}/asetukset" : {
      "get" : {
        "deprecated":true,
        "tags" : [ "HoitotyoResource" ],
        "description" : "This was done in first phase and MDS UI uses this. getHoitotyAsetukset without patientId is preferred method.\nThis will be deprecated in few builds.",
        "operationId" : "resource_HoitotyoResource_getHoitotyoasetukset_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patient Id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyoasetukset"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{id}/current" : {
      "get" : {
        "tags" : [ "HoitotyoResource" ],
        "description" : "This method returns current hoitoty�n merkinn�t entry. Or 404- if current hoitoty�n merkinnat is missing (new must be created in mediatri).",
        "operationId" : "resource_HoitotyoResource_getCurrentHoitotyonmerkinta_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patientId"
          },
          {
            "name" : "includeHoitotyoasetukset",
            "in" : "query",
            "type" : "string",
            "description" : "preload hoitotyoasetukset to response. Hoitotyoasetukset contains koodisto required to display this record."
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Request OK but no content for patient"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{patientOmistajaId}/{osaId}" : {
      "get" : {
        "tags" : [ "HoitotyoResource" ],
        "description" : "This method returns hoitoty�n merkint� entry by OSA numbery. Or 404- if hoitoty�merkint� is missing.",
        "operationId" : "resource_HoitotyoResource_getHoitotyonmerkintaById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "osaId",
            "in" : "path",
            "type" : "string",
            "description" : "OSA number"
          },
          {
            "name" : "patientOmistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "patientId"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Not found: there is no current hoitoty�nmerkinn�t entry"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{patientOmistajaId}/merkinta/{osaId}" : {
      "get" : {
        "deprecated":true,
        "tags" : [ "HoitotyoResource" ],
        "description" : "",
        "operationId" : "resource_HoitotyoResource_getHoitotyonmerkintaByIdDeprecated_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "osaId",
            "in" : "path",
            "type" : "string",
            "description" : "OSA"
          },
          {
            "name" : "patientOmistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "patient Id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{patientOmistajaId}/{hoitotyoId}/addMerkinta" : {
      "post" : {
        "tags" : [ "HoitotyoResource" ],
        "description" : "Adds new record to hoitotyo. This can be anything but it is validated for correct code-usages and searches for duplicates within one hoitotyo.",
        "operationId" : "resource_HoitotyoResource_postAddHoitotyomerkinta_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "hoitotyoId",
            "in" : "path",
            "type" : "string",
            "description" : "Hoitotyo ID"
          },
          {
            "name" : "patientOmistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "patient Id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "description" : "record to add (merkinta Id will be genereated)"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Not found: there is no current Hoitotyo entry"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/hoitotyo/{patientOmistajaId}/{hoitotyoId}/{merkintaId}/createVersion" : {
      "post" : {
        "tags" : [ "HoitotyoResource" ],
        "description" : "Creates new version for given Hoitotyomerkinta.\nPost can be partial as most fields are set by server (time, kirjaaja etc.) anyways.\n\nPosts eg:  {\"teksti\":\"new teksti\", \"tilanne\":\"PA\"}  {\"teksti\":\"new teksti\"} are valid posts.",
        "operationId" : "resource_HoitotyoResource_postHoitotyomerkintaCreateNewVersion_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "hoitotyoId",
            "in" : "path",
            "type" : "string",
            "description" : "Hoitotyo ID"
          },
          {
            "name" : "merkintaId",
            "in" : "path",
            "type" : "string",
            "description" : "Hoitotyomerkinta ID"
          },
          {
            "name" : "patientOmistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "PatientID"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "description" : "Hoitotyomerkinta in json format"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Not found: there is no current hoitoty�nmerkinn�t entry"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitotyomerkinta"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medication/{id}" : {
      "get" : {
        "tags" : [ "LaakitysHistoriaResource" ],
        "description" : "Lists all Medication information for the patient",
        "operationId" : "resource_LaakitysHistoriaResource_getMedication_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patients Mediatri ID"
          },
          {
            "name" : "includeFiltered",
            "in" : "query",
            "type" : "string",
            "description" : "if true also non-active medication is included"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LaakitysView"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medication/{id}/part/{osa}/time" : {
      "put" : {
        "tags" : [ "LaakitysHistoriaResource" ],
        "description" : "Modifies a medication giving time",
        "operationId" : "resource_LaakitysHistoriaResource_modifyTime_PUT",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patients Mediatri ID"
          },
          {
            "name" : "osa",
            "in" : "path",
            "type" : "string",
            "description" : "osa"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LaakitysAnto"
            },
            "description" : "LaakitysAnto"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "LaakitysHistoriaResource" ],
        "description" : "Saves a \"extra\"- or planned-time to database.",
        "operationId" : "resource_LaakitysHistoriaResource_addTime_POST",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patients Mediatri ID"
          },
          {
            "name" : "osa",
            "in" : "path",
            "type" : "string",
            "description" : "osa"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LaakitysAnto"
            },
            "description" : "LaakitysAnto"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "delete" : {
        "tags" : [ "LaakitysHistoriaResource" ],
        "description" : "",
        "operationId" : "resource_LaakitysHistoriaResource_deleteTime_DELETE",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "osa",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LaakitysAnto"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medication/{id}/part/{osa}/times" : {
      "get" : {
        "tags" : [ "LaakitysHistoriaResource" ],
        "description" : "Return all medication giving times of a patients medication",
        "operationId" : "resource_LaakitysHistoriaResource_getTimes_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patients Mediatri ID"
          },
          {
            "name" : "osa",
            "in" : "path",
            "type" : "string",
            "description" : "osa"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LaakitysAnto"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/{id}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Lists all Medication information for the patient",
        "operationId" : "resource_LaakitysResource_getMedication_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patients Mediatri ID"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LaakitysLista"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/medicine/{code}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Returns Laake object with the given medicine vnr code",
        "operationId" : "resource_LaakitysResource_getMedicine_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "code",
            "in" : "path",
            "type" : "string",
            "description" : "VNR code"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Laake"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/medicine/atc/{atc}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Returns a list of Laake objects with the given ATC code",
        "operationId" : "resource_LaakitysResource_getMedicineWithATC_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "atc",
            "in" : "path",
            "type" : "string",
            "description" : "ATC code"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Laake"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/medicine/name/{name}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Returns a list of Laake objects with the given name",
        "operationId" : "resource_LaakitysResource_getMedicineWithName_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "type" : "string",
            "description" : "Medicine name"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Laake"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/medicine/therapygroup/{therapygroup}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Returns a list of Laake objects with the given therapy group",
        "operationId" : "resource_LaakitysResource_getMedicineWithTherapyGroup_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "therapygroup",
            "in" : "path",
            "type" : "string",
            "description" : "Name of a therapy group"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Laake"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicationlist/history/{omistaja}/part/{osa}" : {
      "get" : {
        "tags" : [ "LaakitysResource" ],
        "description" : "Returns a list of previous medications from newest to oldest",
        "operationId" : "resource_LaakitysResource_getMedicationHistory_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "omistaja",
            "in" : "path",
            "type" : "string",
            "description" : "Owner id"
          },
          {
            "name" : "osa",
            "in" : "path",
            "type" : "string",
            "description" : "Part number"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Laakitys"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicalreports/config" : {
      "get" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "",
        "operationId" : "resource_MedicalRecordsResource_getMedicalComponentConfig_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusComponentConfig"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicalreports/lock" : {
      "put" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "Lock medical report before editing.",
        "operationId" : "resource_MedicalRecordsResource_lockMedicalReport_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "description" : "reportId to lock"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Not found: Patient or form is not found"
          },
          "423" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Form is locked already"
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicalreports/unlock" : {
      "put" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "Unlock medical report after editing.",
        "operationId" : "resource_MedicalRecordsResource_unlockMedicalReport_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "time",
            "in" : "query",
            "type" : "string",
            "description" : "lock date received when locking"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "description" : "reportId to unlock"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if time parameter is not present."
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Not found: Patient or form is not found"
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/medicalreports/{id}" : {
      "get" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "",
        "operationId" : "resource_MedicalRecordsResource_getMedicalReports_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "page",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomuksetView"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "Create new kertomus entry",
        "operationId" : "resource_MedicalRecordsResource_addNewMedicalReportEntry_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id"
          },
          {
            "name" : "pvt",
            "in" : "query",
            "type" : "string",
            "description" : "palvelutapahtuma id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusEntryEdit"
            },
            "description" : "entry model with titles values."
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Not found: Patient or form is not found"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "MedicalRecordsResource" ],
        "description" : "Edit already created medical record.",
        "operationId" : "resource_MedicalRecordsResource_editMedicalReport_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patient omistaja id"
          },
          {
            "name" : "pvt",
            "in" : "query",
            "type" : "string",
            "description" : "palvelutapahtuma id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusEntryEdit"
            },
            "description" : "to edit"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Not found: Patient or form is not found"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_KertomusID"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/metadata" : {
      "get" : {
        "tags" : [ "MetadataResource" ],
        "description" : "Returns all metadata",
        "operationId" : "resource_MetadataResource_getMetadata_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "date",
            "in" : "query",
            "type" : "string",
            "description" : "time when validity is checked"
          },
          {
            "name" : "onlyValid",
            "in" : "query",
            "type" : "string",
            "description" : "should only time valid metadata be returned"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MetadataGroup"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/metadata/{groupID}" : {
      "get" : {
        "tags" : [ "MetadataResource" ],
        "description" : "Returns all metadata belonging to an identified group",
        "operationId" : "resource_MetadataResource_getMetadataGroup_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "groupID",
            "in" : "path",
            "type" : "string",
            "description" : "metadata group id"
          },
          {
            "name" : "date",
            "in" : "query",
            "type" : "string",
            "description" : "time when validity is checked"
          },
          {
            "name" : "onlyValid",
            "in" : "query",
            "type" : "string",
            "description" : "should only time valid metadata be returned"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_MetadataGroup"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/metadata/{groupID}/{metadataID}" : {
      "get" : {
        "tags" : [ "MetadataResource" ],
        "description" : "Return specific metadata with provided ID in provided group",
        "operationId" : "resource_MetadataResource_getMetadataFromGroup_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "groupID",
            "in" : "path",
            "type" : "string",
            "description" : "metadata group id"
          },
          {
            "name" : "metadataID",
            "in" : "path",
            "type" : "string",
            "description" : "metadata id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Metadata"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/osastokartta" : {
      "get" : {
        "tags" : [ "OsastokarttaResource" ],
        "description" : "",
        "operationId" : "resource_OsastokarttaResource_getOsastokartta_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Osastokartta"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelupaatos/keskeytyssyyt" : {
      "get" : {
        "tags" : [ "PalvelupaatosResource" ],
        "description" : "Gets keskeytys syyt (service interruption descriptions) configured to the currently accessed Mediatri database in Palvelup��t�kset-form.",
        "operationId" : "resource_PalvelupaatosResource_getKeskeytysSyyt_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelupaatos/palveluluokat" : {
      "get" : {
        "tags" : [ "PalvelupaatosResource" ],
        "description" : "Gets palveluluokkas configured to the currently accessed Mediatri database in Palvelup��t�kset-form.",
        "operationId" : "resource_PalvelupaatosResource_getPalveluluokat_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palveluluokka"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palveluluokka"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palveluluokka"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palveluluokka"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palveluluokka"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelupaatos/patient/{id}" : {
      "get" : {
        "tags" : [ "PalvelupaatosResource" ],
        "description" : "Gets palvelup��t�kset for given patient, with given time interval restrictions..",
        "operationId" : "resource_PalvelupaatosResource_getPalvelupaatoksetForPatient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patient id"
          },
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "end time for narrowing the returned result set (optional)"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "start time for narrowing the returned result set (optional)"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelupaatos"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelupaatos"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelupaatos"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelupaatos"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Palvelupaatos"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma" : {
      "get" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "Method returns list of palvelutapahtumas from all registries. Accessing this API requires selected palvelutapahtuma.",
        "operationId" : "resource_PalvelutapahtumaResource_getAllPalvelutapahtumas_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "count",
            "in" : "query",
            "type" : "string",
            "description" : "count"
          },
          {
            "name" : "lastSeen",
            "in" : "query",
            "type" : "string",
            "description" : "lastSeen"
          },
          {
            "name" : "patientId",
            "in" : "query",
            "type" : "string",
            "description" : "patient id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed OR palvelutapahtuma has been removed"
          },
          "412" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Precondition failed: Authenticated user must pick proper encounter event before accessing this API"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma/id" : {
      "get" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "For fetching one palvelutapahtuma. Eg medicaldocs response contains only pt-id and they can be fetched seperately.",
        "operationId" : "resource_PalvelutapahtumaResource_getPalvelutapahtumaById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "palvelutapahtumaId",
            "in" : "query",
            "type" : "string",
            "description" : "palvelutapahtumaId"
          },
          {
            "name" : "patientId",
            "in" : "query",
            "type" : "string",
            "description" : "patient id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed OR palvelutapahtuma has been removed"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Palvelutapahtuma"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma/listavailableforcarerelation" : {
      "get" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "Method returns list of palvelutapahtumas from units own registry that are suitable for care-relation.\nPalvelutapahtumaList contains",
        "operationId" : "resource_PalvelutapahtumaResource_getPalvelutapahtumasForCareRelationSelection_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "patientId",
            "in" : "query",
            "type" : "string",
            "description" : "patient id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed OR palvelutapahtuma has been removed"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PalvelutapahtumaList"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma/select" : {
      "post" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "Selects this palvelutapahtuma for proper care-relation to patient. This is logged and added to session, each request requiring palvelutapahtuma should use this Id.\n\nResponse is text/plain since there is nothing more to respond that http-status 200.",
        "operationId" : "resource_PalvelutapahtumaResource_createHoitosuhde_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "palvelutapahtumaId",
            "in" : "formData",
            "type" : "string",
            "description" : "palvelutapahtumaId"
          },
          {
            "name" : "patientId",
            "in" : "formData",
            "type" : "string",
            "description" : "patient id"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed OR palvelutapahtuma has been removed"
          },
          "412" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "palvelutapahtuma is not suitable for care relation."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma/aktiivinen/{id}" : {
      "get" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "This method returns hoitosuhde for given patient for current logged in user.",
        "operationId" : "resource_PalvelutapahtumaResource_getAktiivinenHoitosuhde_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patient id"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "No content: OK request but no active hoitosuhde"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitosuhde"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/palvelutapahtuma/hoitojakso/{patientId}" : {
      "get" : {
        "tags" : [ "PalvelutapahtumaResource" ],
        "description" : "Gets currently active hoitojakso for patient (based on current hoitosuhde, if available)",
        "operationId" : "resource_PalvelutapahtumaResource_getAktiivinenHoitojakso_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "patientId",
            "in" : "path",
            "type" : "string",
            "description" : "patient omistaja id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitojakso"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitojakso"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitojakso"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitojakso"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Hoitojakso"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/list" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets list of patients. If no limiting parameters are given, returns all active patients from the system.",
        "operationId" : "resource_PatientResource_getPatients_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "maxId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, sets minimum owner id for the returned patient list (not inclusive)"
          },
          {
            "name" : "minId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, sets minimum owner id for the returned patient list (inclusive)"
          },
          {
            "name" : "pageIndex",
            "in" : "query",
            "type" : "string",
            "description" : "page index, starting from which client wants to list patients. Minimum value for page index is 1."
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "type" : "string",
            "description" : "defines page size i.e. maximum amount of patients returned in on query, if page size is set, then also\n<code>pageIndex<\/code> parameter must be defined. If not set, returning all the patients\nmatching given conditions."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PatientList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/listed" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Get patients by given unit specific lists.",
        "operationId" : "resource_PatientResource_getListedPatients_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "list members should be valid before this time (inclusive)"
          },
          {
            "name" : "list",
            "in" : "query",
            "type" : "string",
            "description" : "patient list form id"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "list members should be valid after this time (inclusive)"
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "unit ids for which list contents should be fetched"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PersonListByUnitAndForm"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/search" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Makes search from all patients with given criteria.\nEither none or all search parameters can be set.",
        "operationId" : "resource_PatientResource_searchPatients_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "firstNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "first name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "fullNameContains",
            "in" : "query",
            "type" : "string",
            "description" : "patient's full name contains string condition, or <code>null<\/code> if not used as criterion\nFull name search overrides more specific lastNamePrefix, firstNamePrefix, userNamePrefix searches."
          },
          {
            "name" : "lastNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "last name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "pageIndex",
            "in" : "query",
            "type" : "string",
            "description" : "page index starting from which client wants to list patients"
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "type" : "string",
            "description" : "defines page size i.e. maximum amount of patients returned in on query, if page size is set, then also\n<code>pageIndex<\/code> parameter must be defined. If not set, returning all the patients\nmatching given conditions."
          },
          {
            "name" : "ssnPrefix",
            "in" : "query",
            "type" : "string",
            "description" : "social security starts with condition, or <code>null<\/code> if not used as criterion"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PatientList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{id}" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "",
        "operationId" : "resource_PatientResource_getPatientByMediatriId_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeBasicInfo",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeHoitosuhde",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeRiskitietoStatus",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Patient"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PatientResource" ],
        "description" : "",
        "operationId" : "resource_PatientResource_putPerson_PUT",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/ssn/{ssn}" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "",
        "operationId" : "resource_PatientResource_getPatient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "ssn",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeBasicInfo",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeHoitosuhde",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeRiskitietoStatus",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Patient"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{id}/basicinfos" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets patients basic information based on Mediatri owner id.",
        "operationId" : "resource_PatientResource_getPatientBasicInfoByMediatriId_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Mediari owner id."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{id}/courses" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets information about the patients' course attendance based on Mediatri owner id.",
        "operationId" : "resource_PatientResource_getPatientCourses_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Mediari owner id."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CourseCollectionDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{id}/lists" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets all patient's lists based on omistaja id.",
        "operationId" : "resource_PatientResource_getListsByMediatriId_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OmistajaListConfig"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{id}/riskistatus" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets patients iskitieto status based on Mediatri owner id.",
        "operationId" : "resource_PatientResource_getPatientsRiskitietoStatus_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Mediari owner id."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RiskitietoStatus"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/ssn/{ssn}/basicinfos" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets patients basic information based on patients' social security number.",
        "operationId" : "resource_PatientResource_getPatientBasicInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "ssn",
            "in" : "path",
            "type" : "string",
            "description" : "patients' social security number"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/ssn/{ssn}/lists" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets all patient's lists based on social security number.",
        "operationId" : "resource_PatientResource_getLists_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "ssn",
            "in" : "path",
            "type" : "string",
            "description" : "social security number"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OmistajaListConfig"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/id/{omistajaId}/list/{listId}" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets omistajas for given list owned by the given owner (=form owner).",
        "operationId" : "resource_PatientResource_getOmistajasFromListByMediatriId_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "listId",
            "in" : "path",
            "type" : "string",
            "description" : "list id (currently equals to form id)"
          },
          {
            "name" : "omistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id that is used as criteria to fetch data from list. It is also checked if this omistaja owns form with <code>lomakeId<\/code>, but otherwise it is expected that <code>lomakeId<\/code> refers to form owned by system owner (0) (this method requires always omistaja id)"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GenericOmistaja"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/patients/ssn/{ssn}/list/{listId}" : {
      "get" : {
        "tags" : [ "PatientResource" ],
        "description" : "Gets omistajas for given list owned by the given owner (=form owner).",
        "operationId" : "resource_PatientResource_getOmistajasFromList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "listId",
            "in" : "path",
            "type" : "string",
            "description" : "list id (currently equals to form id)"
          },
          {
            "name" : "ssn",
            "in" : "path",
            "type" : "string",
            "description" : "patient's social security number"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GenericOmistaja"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/ping" : {
      "get" : {
        "tags" : [ "PingResource" ],
        "description" : "Client Side ping for server every 30 sec on offline.",
        "operationId" : "resource_PingResource_ping_GET",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/riskit/{id}" : {
      "get" : {
        "tags" : [ "RiskitietoResource" ],
        "description" : "Fetch Riskitiedot with patient id",
        "operationId" : "resource_RiskitietoResource_getRiskitiedot_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Riskitiedot"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/seuranta/config" : {
      "get" : {
        "tags" : [ "SeurantaResource" ],
        "description" : "",
        "operationId" : "resource_SeurantaResource_getMedicalComponentConfig_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SeurantaConfig"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SeurantaConfig"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SeurantaConfig"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SeurantaConfig"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/seuranta/{id}" : {
      "post" : {
        "tags" : [ "SeurantaResource" ],
        "description" : "Create new seuranta entry",
        "operationId" : "resource_SeurantaResource_addNewSeurantaEntry_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id"
          },
          {
            "name" : "pvt",
            "in" : "query",
            "type" : "string",
            "description" : "palvelutapahtuma id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SeurantaEntry"
            },
            "description" : "seuranta entry model with titles values."
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Not found: Patient or form is not found"
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "SeurantaResource" ],
        "description" : "Return mittaus view for seuranta component.\nIt can return the list of all mittaus or only for one lomake",
        "operationId" : "resource_SeurantaResource_getMittaukset_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "patient Id"
          },
          {
            "name" : "count",
            "in" : "query",
            "type" : "string",
            "description" : "count of mittaus for one otsikko,not obligatory parameter by default 5"
          },
          {
            "name" : "seuranta",
            "in" : "query",
            "type" : "string",
            "description" : "seuranta lomake id. If defined the list contains the value only for one seuranta"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "410" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Gone: Patient has been removed"
          },
          "412" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Precondition failed: Authenticated user must pick proper encounter event before accessing this API"
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FysiologisetMittauksetView"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/titles/component/{id}" : {
      "get" : {
        "tags" : [ "TitleResource" ],
        "description" : "Return titles' configurations by component.",
        "operationId" : "resource_TitleResource_getTitlesConfigurations_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "component"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientTitleConfig"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientTitleConfig"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientTitleConfig"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientTitleConfig"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientTitleConfig"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/titles/{name}/config" : {
      "get" : {
        "tags" : [ "TitleResource" ],
        "description" : "Returns title configuration for the title by name.",
        "operationId" : "resource_TitleResource_getTitleConfig_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "type" : "string",
            "description" : "encoded title in the url using UTF-8 code page. Implementation should decode name at first."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ClientTitleConfig"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/titles/{name}/options" : {
      "get" : {
        "tags" : [ "TitleResource" ],
        "description" : "Returns the list of possible values for the title.\nMethod return the list of options as list of Object instances to allow correctly serialize derived classes of ViewTitleValue.\nOtherwise it is necessary to create ows serializer for ViewTitleValue class.",
        "operationId" : "resource_TitleResource_getOptions_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "type" : "string",
            "description" : "encoded title in the url using UTF-8 code page. Implementation should decode name at first."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/labs/{id}" : {
      "get" : {
        "tags" : [ "TutkimuspyyntoResource" ],
        "description" : "Fetch Tutkimuspyynnot with patient id",
        "operationId" : "resource_TutkimuspyyntoResource_getTutkimuspyynnot_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          },
          {
            "name" : "daysBack",
            "in" : "query",
            "type" : "string",
            "description" : "the amount of days from which the lab results are fetched"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Tutkimuspyynnot"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/labs/{id}/acknowledge" : {
      "put" : {
        "tags" : [ "TutkimuspyyntoResource" ],
        "description" : "Acknowledge one or more laboratory results.\nIf tutkimuspyyntoDTO is not valid, ValidationException is thrown.\nIf tutkimuspyyntos in tutkimuspyyntoDTO are ordered by someone else than\nthe current user, AccessDeniedException is thrown.",
        "operationId" : "resource_TutkimuspyyntoResource_acknowledgeTutkimuspyynto_PUT",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "Patient id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Tutkimuspyynto"
            },
            "description" : "tutkimuspyyntoDTO"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/units/{id}" : {
      "get" : {
        "tags" : [ "UnitResource" ],
        "description" : "Gets unit based on unit id. BasicInfo is NOT included.",
        "operationId" : "resource_UnitResource_getUnit_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "unit id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Unit"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/units/{id}/basicinfos" : {
      "get" : {
        "tags" : [ "UnitResource" ],
        "description" : "Gets units basic info based on unit id.",
        "operationId" : "resource_UnitResource_getUnitsBasicInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "unit id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/availability" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Search users with given criteria and get their availability to work at a given time.",
        "operationId" : "resource_UserResource_searchWorkersWithAvailability_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "end of the required period, mandatory"
          },
          {
            "name" : "firstNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "first name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "fullNameContains",
            "in" : "query",
            "type" : "string",
            "description" : "user's full name contains string condition, or <code>null<\/code> if not used as criterion\nFull name search overrides more specific lastNamePrefix, firstNamePrefix, userNamePrefix searches."
          },
          {
            "name" : "lastNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "last name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "listId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list id (=form id) to fetch users, if not set returning all users"
          },
          {
            "name" : "listOwnerId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list owner (=form owner id) if is not system owner list"
          },
          {
            "name" : "skill",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "skill(s) supported condition, or an empty list if not used as criterion"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "start of the required period, mandatory"
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "string",
            "description" : "unit for which the workers should have working hours defined"
          },
          {
            "name" : "userNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "username starts with condition, or <code>null<\/code> if not used as criterion"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkerAvailabilityDto"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/groups" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Return the list of available user groups in the system.",
        "operationId" : "resource_UserResource_getUserGroups_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserGroup"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/list" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Gets list of users. If no limiting parameters are given, returns all active users from the system.",
        "operationId" : "resource_UserResource_getUsers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "listId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list id (=form id) to fetch users, if not set returning all users"
          },
          {
            "name" : "listOwnerId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list owner (=form owner id) if is not system owner list"
          },
          {
            "name" : "maxId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, sets minimum owner id for the returned user list (not inclusive)"
          },
          {
            "name" : "minId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, sets minimum owner id for the returned user list (inclusive)"
          },
          {
            "name" : "pageIndex",
            "in" : "query",
            "type" : "string",
            "description" : "page index, starting from which client wants to list users. Minimum value for page index is 1."
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "type" : "string",
            "description" : "defines page size i.e. maximum amount of users returned in on query, if page size is set, then also\n<code>pageIndex<\/code> parameter must be defined. If not set, returning all the users\nmatching given conditions."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/listed" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Get users by given unit specific lists.",
        "operationId" : "resource_UserResource_getListedUsers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "list members should be valid before this time (inclusive)"
          },
          {
            "name" : "includeSkillInfo",
            "in" : "query",
            "type" : "string",
            "description" : "a boolean value controlling whether worker skill information is added in response"
          },
          {
            "name" : "list",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "worker list form ids"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "list members should be valid after this time (inclusive)"
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "unit ids for which list contents should be fetched"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PersonListByUnitAndForm"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/listedWithAvailability" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "",
        "operationId" : "resource_UserResource_getWorkersWithAvailability_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "includeSkillInfo",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "list",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : ""
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PersonListByUnitAndForm"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/search" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Makes search from all users with given criteria.\nEither none or all search parameters can be set.",
        "operationId" : "resource_UserResource_searchUsers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "availability condition (user account validity end time, inclusive), or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "firstNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "first name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "fullNameContains",
            "in" : "query",
            "type" : "string",
            "description" : "user's full name contains string condition, or <code>null<\/code> if not used as criterion\nFull name search overrides more specific lastNamePrefix, firstNamePrefix, userNamePrefix searches."
          },
          {
            "name" : "lastNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "last name starts with condition, or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "listId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list id (=form id) to fetch users, if not set returning all users"
          },
          {
            "name" : "listOwnerId",
            "in" : "query",
            "type" : "string",
            "description" : "optional parameter, list owner (=form owner id) if is not system owner list"
          },
          {
            "name" : "pageIndex",
            "in" : "query",
            "type" : "string",
            "description" : "page index starting from which client wants to list users"
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "type" : "string",
            "description" : "defines page size i.e. maximum amount of users returned in on query, if page size is set, then also\n<code>pageIndex<\/code> parameter must be defined. If not set, returning all the users\nmatching given conditions."
          },
          {
            "name" : "skill",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "skill(s) supported condition, or an empty list if not used as criterion"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "availability condition (user account validity start time, inclusive), or <code>null<\/code> if not used as criterion"
          },
          {
            "name" : "userNamePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "username starts with condition, or <code>null<\/code> if not used as criterion"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserList"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Gets user based on user id.",
        "operationId" : "resource_UserResource_getUser_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_User"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/availability" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Get information about a worker's availability to work at a given time period.",
        "operationId" : "resource_UserResource_getAvailability_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id of the worker"
          },
          {
            "name" : "endTime",
            "in" : "query",
            "type" : "string",
            "description" : "end of the required time period, mandatory"
          },
          {
            "name" : "startTime",
            "in" : "query",
            "type" : "string",
            "description" : "start of the required time period, mandatory"
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "string",
            "description" : "unit for which the workers should have working hours defined"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityDto"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/basicinfos" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Gets user's basic information based on user id.",
        "operationId" : "resource_UserResource_getUserBasicInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_BasicInfo"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/lists" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Gets all user's lists based on omistaja id.",
        "operationId" : "resource_UserResource_getUsersLists_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id"
          },
          {
            "name" : "fetchSystemOwnedLists",
            "in" : "query",
            "type" : "string",
            "description" : "optional, if set to <code>true<\/code> fetching also system owned lists."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OmistajaListConfig"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/skills" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Get the list of skills that the given user has",
        "operationId" : "resource_UserResource_getSkills_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "UserResource" ],
        "description" : "Update the list of skills that the given user has",
        "operationId" : "resource_UserResource_editSkills_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "description" : "a list of skill DTOs. Only skillId and possible 'removed' flag are checked."
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SkillDto"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/timeRules" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Get the working hour rules of a given user",
        "operationId" : "resource_UserResource_getTimeRules_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "after",
            "in" : "query",
            "type" : "string",
            "description" : "return only rules that are valid after this time, optional parameter"
          },
          {
            "name" : "unit",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "description" : "list of units ('yksikk�'), the working hour rules linked to which should be returned.\nIf no units are given, working hour rules for all units the user has access to are returned"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TimeRuleDto"
}
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "UserResource" ],
        "description" : "Add a new working hour rule for the given user",
        "operationId" : "resource_UserResource_addTimeRule_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "description" : "a new working hour rule for the user"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/timeRules/{ruleId}" : {
      "put" : {
        "tags" : [ "UserResource" ],
        "description" : "Edit a working hour rule attached to a given user",
        "operationId" : "resource_UserResource_editTimeRule_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "ruleId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "description" : "a modified working hour rule for the user"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "delete" : {
        "tags" : [ "UserResource" ],
        "description" : "Remove a working hour rule from the given user",
        "operationId" : "resource_UserResource_deleteTimeRule_DELETE",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "ruleId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{omistajaId}/list/{listId}" : {
      "get" : {
        "tags" : [ "UserResource" ],
        "description" : "Gets omistajas for given list owned by the given owner (=form owner).",
        "operationId" : "resource_UserResource_getOmistajasFromListByMediatriId_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "listId",
            "in" : "path",
            "type" : "string",
            "description" : "list id (currently equals to form id)"
          },
          {
            "name" : "omistajaId",
            "in" : "path",
            "type" : "string",
            "description" : "omistaja id that is used as criteria to fetch data from list. It is also checked if this omistaja owns form with <code>lomakeId<\/code>, but otherwise it is expected that <code>lomakeId<\/code> refers to form owned by system owner (0) (this method requires always omistaja id)"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GenericOmistaja"
}
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
    ,
    "\/users/{id}/timeRules/{ruleId}/instances/{instanceId}" : {
      "put" : {
        "tags" : [ "UserResource" ],
        "description" : "Edit a working hour rule instance attached to a given user",
        "operationId" : "resource_UserResource_editTimeRule_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "instanceId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule instance"
          },
          {
            "name" : "ruleId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "description" : "a modified working hour rule for the user"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "404" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Not found: The requested resource was not found. "
          },
          "500" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TimeRuleDto"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
      ,
      "delete" : {
        "tags" : [ "UserResource" ],
        "description" : "Remove a working hour rule instance from the given user",
        "operationId" : "resource_UserResource_deleteTimeRuleInstance_DELETE",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "type" : "string",
            "description" : "user id"
          },
          {
            "name" : "instanceId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule instance"
          },
          {
            "name" : "ruleId",
            "in" : "path",
            "type" : "string",
            "description" : "identifier for the rule"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Success"
          },
          "400" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Bad Request: if values were invalid"
          },
          "401" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unauthenticated: The request requires user authentication. "
          },
          "403" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Forbidden: User is authenticated but doesn't have enough priviledges to access this data. Re-login will not help and the request SHOULD NOT be repeated."
          },
          "500" : {
            "schema" : {
"description" : "",
"type" : "object"
            },
            "headers" : {
            },
            "description" : "Unexpected error"
          },
          "default" : {
            "description" : "Unexpected error."
          }
        }
      }
    }
  }
}
